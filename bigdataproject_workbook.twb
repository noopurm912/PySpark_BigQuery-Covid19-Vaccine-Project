<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0315.1000                               -->
<workbook original-version='18.1' source-build='2020.4.3 (20204.21.0315.1000)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='maxVaccinationContries+ (bigdataproject)' inline='true' name='federated.1u9to1o0q1uxv01b3j8k61dizu42' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BigQuery' name='bigquery.0rg1fpg026czvv105fb390vqvc99'>
            <connection CATALOG='arcane-pillar-307322' EXECCATALOG='arcane-pillar-307322' authentication='yes' bq-dataset-fetch-rows='' bq-fetch-rows='' bq-fetch-tasks='' bq-large-fetch-rows='' bq-project-fetch-rows='' bq-response-rows='' class='bigquery' connection-dialect='google-sql' project='BigDataProject' schema='bigdataproject' server='' server-oauth='' username='nmishra2@my.harrisburgu.edu' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='DailyVaccsCountryDatewise' table='[arcane-pillar-307322.bigdataproject].[DailyVaccsCountryDatewise]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='maxVaccinationContries' table='[arcane-pillar-307322.bigdataproject].[maxVaccinationContries]' type='table' />
          <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='DailyVaccsCountryDatewise' table='[arcane-pillar-307322.bigdataproject].[DailyVaccsCountryDatewise]' type='table' />
          <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='dailyVaccsYearwise' table='[arcane-pillar-307322.bigdataproject].[dailyVaccsYearwise]' type='table' />
          <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='VaccsAnalysisPerHundred' table='[arcane-pillar-307322.bigdataproject].[VaccsAnalysisPerHundred]' type='table' />
          <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='totalPeopleVaccvsFullyVacc' table='[arcane-pillar-307322.bigdataproject].[totalPeopleVaccvsFullyVacc]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[country (DailyVaccsCountryDatewise)]' value='[DailyVaccsCountryDatewise].[country]' />
          <map key='[country (VaccsAnalysisPerHundred)]' value='[VaccsAnalysisPerHundred].[country]' />
          <map key='[country (totalPeopleVaccvsFullyVacc)]' value='[totalPeopleVaccvsFullyVacc].[country]' />
          <map key='[country]' value='[maxVaccinationContries].[country]' />
          <map key='[date]' value='[DailyVaccsCountryDatewise].[date]' />
          <map key='[max_daily_vaccinations_ (dailyVaccsYearwise)]' value='[dailyVaccsYearwise].[max_daily_vaccinations_]' />
          <map key='[max_daily_vaccinations_]' value='[DailyVaccsCountryDatewise].[max_daily_vaccinations_]' />
          <map key='[max_people_fully_vaccinated_]' value='[totalPeopleVaccvsFullyVacc].[max_people_fully_vaccinated_]' />
          <map key='[max_people_fully_vaccinated_per_hundred_]' value='[VaccsAnalysisPerHundred].[max_people_fully_vaccinated_per_hundred_]' />
          <map key='[max_people_vaccinated_]' value='[totalPeopleVaccvsFullyVacc].[max_people_vaccinated_]' />
          <map key='[max_people_vaccinated_per_hundred_]' value='[VaccsAnalysisPerHundred].[max_people_vaccinated_per_hundred_]' />
          <map key='[max_total_vaccinations_ (dailyVaccsYearwise)]' value='[dailyVaccsYearwise].[max_total_vaccinations_]' />
          <map key='[max_total_vaccinations_]' value='[maxVaccinationContries].[max_total_vaccinations_]' />
          <map key='[year]' value='[dailyVaccsYearwise].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[maxVaccinationContries]</parent-name>
            <remote-alias>country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maxVaccinationContries_826DCAD57E824996A44A339D4702978D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_vaccinations_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_vaccinations_]</local-name>
            <parent-name>[maxVaccinationContries]</parent-name>
            <remote-alias>max_total_vaccinations_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maxVaccinationContries_826DCAD57E824996A44A339D4702978D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (DailyVaccsCountryDatewise)]</local-name>
            <parent-name>[DailyVaccsCountryDatewise]</parent-name>
            <remote-alias>country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DailyVaccsCountryDatewise_FD97EC9F73F145D7A99F7669F6BA799E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[DailyVaccsCountryDatewise]</parent-name>
            <remote-alias>date</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DailyVaccsCountryDatewise_FD97EC9F73F145D7A99F7669F6BA799E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_daily_vaccinations_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_daily_vaccinations_]</local-name>
            <parent-name>[DailyVaccsCountryDatewise]</parent-name>
            <remote-alias>max_daily_vaccinations_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DailyVaccsCountryDatewise_FD97EC9F73F145D7A99F7669F6BA799E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[dailyVaccsYearwise]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyVaccsYearwise_9986AED500C34683A16ABEDA4420FED4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_vaccinations_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_vaccinations_ (dailyVaccsYearwise)]</local-name>
            <parent-name>[dailyVaccsYearwise]</parent-name>
            <remote-alias>max_total_vaccinations_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyVaccsYearwise_9986AED500C34683A16ABEDA4420FED4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_daily_vaccinations_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_daily_vaccinations_ (dailyVaccsYearwise)]</local-name>
            <parent-name>[dailyVaccsYearwise]</parent-name>
            <remote-alias>max_daily_vaccinations_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyVaccsYearwise_9986AED500C34683A16ABEDA4420FED4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (VaccsAnalysisPerHundred)]</local-name>
            <parent-name>[VaccsAnalysisPerHundred]</parent-name>
            <remote-alias>country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VaccsAnalysisPerHundred_4CAB81971C874FA4BAF75F6252EA86AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_people_vaccinated_per_hundred_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_people_vaccinated_per_hundred_]</local-name>
            <parent-name>[VaccsAnalysisPerHundred]</parent-name>
            <remote-alias>max_people_vaccinated_per_hundred_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VaccsAnalysisPerHundred_4CAB81971C874FA4BAF75F6252EA86AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_people_fully_vaccinated_per_hundred_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_people_fully_vaccinated_per_hundred_]</local-name>
            <parent-name>[VaccsAnalysisPerHundred]</parent-name>
            <remote-alias>max_people_fully_vaccinated_per_hundred_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VaccsAnalysisPerHundred_4CAB81971C874FA4BAF75F6252EA86AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (totalPeopleVaccvsFullyVacc)]</local-name>
            <parent-name>[totalPeopleVaccvsFullyVacc]</parent-name>
            <remote-alias>country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[totalPeopleVaccvsFullyVacc_A900D690726D4F76B3A34C361A344846]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_people_vaccinated_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_people_vaccinated_]</local-name>
            <parent-name>[totalPeopleVaccvsFullyVacc]</parent-name>
            <remote-alias>max_people_vaccinated_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[totalPeopleVaccvsFullyVacc_A900D690726D4F76B3A34C361A344846]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_people_fully_vaccinated_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_people_fully_vaccinated_]</local-name>
            <parent-name>[totalPeopleVaccvsFullyVacc]</parent-name>
            <remote-alias>max_people_fully_vaccinated_</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[totalPeopleVaccvsFullyVacc_A900D690726D4F76B3A34C361A344846]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='DailyVaccsCountryDatewise' datatype='table' name='[__tableau_internal_object_id__].[DailyVaccsCountryDatewise_FD97EC9F73F145D7A99F7669F6BA799E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='VaccsAnalysisPerHundred' datatype='table' name='[__tableau_internal_object_id__].[VaccsAnalysisPerHundred_4CAB81971C874FA4BAF75F6252EA86AB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='dailyVaccsYearwise' datatype='table' name='[__tableau_internal_object_id__].[dailyVaccsYearwise_9986AED500C34683A16ABEDA4420FED4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='maxVaccinationContries' datatype='table' name='[__tableau_internal_object_id__].[maxVaccinationContries_826DCAD57E824996A44A339D4702978D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='totalPeopleVaccvsFullyVacc' datatype='table' name='[__tableau_internal_object_id__].[totalPeopleVaccvsFullyVacc_A900D690726D4F76B3A34C361A344846]' role='measure' type='quantitative' />
      <column datatype='string' name='[country (DailyVaccsCountryDatewise)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country (VaccsAnalysisPerHundred)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country (totalPeopleVaccvsFullyVacc)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='max daily vaccinations  (dailyVaccsYearwise)' datatype='integer' name='[max_daily_vaccinations_ (dailyVaccsYearwise)]' role='measure' type='quantitative' />
      <column caption='Max Daily Vaccinations' datatype='integer' name='[max_daily_vaccinations_]' role='measure' type='quantitative' />
      <column caption='Max People Fully Vaccinated' datatype='integer' name='[max_people_fully_vaccinated_]' role='measure' type='quantitative' />
      <column caption='Max People Fully Vaccinated Per Hundred' datatype='integer' name='[max_people_fully_vaccinated_per_hundred_]' role='measure' type='quantitative' />
      <column caption='Max People Vaccinated' datatype='integer' name='[max_people_vaccinated_]' role='measure' type='quantitative' />
      <column caption='Max People Vaccinated Per Hundred' datatype='integer' name='[max_people_vaccinated_per_hundred_]' role='measure' type='quantitative' />
      <column caption='max total vaccinations  (dailyVaccsYearwise)' datatype='integer' name='[max_total_vaccinations_ (dailyVaccsYearwise)]' role='measure' type='quantitative' />
      <column caption='Max Total Vaccinations' datatype='integer' name='[max_total_vaccinations_]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country (totalPeopleVaccvsFullyVacc)]' derivation='None' name='[none:country (totalPeopleVaccvsFullyVacc):nk]' pivot='key' type='nominal' />
      <column-instance column='[max_people_fully_vaccinated_]' derivation='Sum' name='[sum:max_people_fully_vaccinated_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_people_fully_vaccinated_per_hundred_]' derivation='Sum' name='[sum:max_people_fully_vaccinated_per_hundred_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_people_vaccinated_]' derivation='Sum' name='[sum:max_people_vaccinated_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_people_vaccinated_per_hundred_]' derivation='Sum' name='[sum:max_people_vaccinated_per_hundred_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country (totalPeopleVaccvsFullyVacc):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2021</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_per_hundred_:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_per_hundred_:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='DailyVaccsCountryDatewise' id='DailyVaccsCountryDatewise_FD97EC9F73F145D7A99F7669F6BA799E'>
            <properties context=''>
              <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='DailyVaccsCountryDatewise' table='[arcane-pillar-307322.bigdataproject].[DailyVaccsCountryDatewise]' type='table' />
            </properties>
          </object>
          <object caption='VaccsAnalysisPerHundred' id='VaccsAnalysisPerHundred_4CAB81971C874FA4BAF75F6252EA86AB'>
            <properties context=''>
              <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='VaccsAnalysisPerHundred' table='[arcane-pillar-307322.bigdataproject].[VaccsAnalysisPerHundred]' type='table' />
            </properties>
          </object>
          <object caption='dailyVaccsYearwise' id='dailyVaccsYearwise_9986AED500C34683A16ABEDA4420FED4'>
            <properties context=''>
              <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='dailyVaccsYearwise' table='[arcane-pillar-307322.bigdataproject].[dailyVaccsYearwise]' type='table' />
            </properties>
          </object>
          <object caption='maxVaccinationContries' id='maxVaccinationContries_826DCAD57E824996A44A339D4702978D'>
            <properties context=''>
              <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='maxVaccinationContries' table='[arcane-pillar-307322.bigdataproject].[maxVaccinationContries]' type='table' />
            </properties>
          </object>
          <object caption='totalPeopleVaccvsFullyVacc' id='totalPeopleVaccvsFullyVacc_A900D690726D4F76B3A34C361A344846'>
            <properties context=''>
              <relation connection='bigquery.0rg1fpg026czvv105fb390vqvc99' name='totalPeopleVaccvsFullyVacc' table='[arcane-pillar-307322.bigdataproject].[totalPeopleVaccvsFullyVacc]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[country]' />
              <expression op='[country (DailyVaccsCountryDatewise)]' />
            </expression>
            <first-end-point object-id='maxVaccinationContries_826DCAD57E824996A44A339D4702978D' />
            <second-end-point object-id='DailyVaccsCountryDatewise_FD97EC9F73F145D7A99F7669F6BA799E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[country]' />
              <expression op='[country (VaccsAnalysisPerHundred)]' />
            </expression>
            <first-end-point object-id='maxVaccinationContries_826DCAD57E824996A44A339D4702978D' />
            <second-end-point object-id='VaccsAnalysisPerHundred_4CAB81971C874FA4BAF75F6252EA86AB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[max_daily_vaccinations_]' />
              <expression op='[max_daily_vaccinations_ (dailyVaccsYearwise)]' />
            </expression>
            <first-end-point object-id='DailyVaccsCountryDatewise_FD97EC9F73F145D7A99F7669F6BA799E' />
            <second-end-point object-id='dailyVaccsYearwise_9986AED500C34683A16ABEDA4420FED4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[country]' />
              <expression op='[country (totalPeopleVaccvsFullyVacc)]' />
            </expression>
            <first-end-point object-id='maxVaccinationContries_826DCAD57E824996A44A339D4702978D' />
            <second-end-point object-id='totalPeopleVaccvsFullyVacc_A900D690726D4F76B3A34C361A344846' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Maximum number of fully vaccinated people'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Maximum number of fully vaccinated people</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='maxVaccinationContries+ (bigdataproject)' name='federated.1u9to1o0q1uxv01b3j8k61dizu42' />
          </datasources>
          <datasource-dependencies datasource='federated.1u9to1o0q1uxv01b3j8k61dizu42'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max People Fully Vaccinated' datatype='integer' name='[max_people_fully_vaccinated_]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_people_fully_vaccinated_]' derivation='Sum' name='[sum:max_people_fully_vaccinated_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([max_people_fully_vaccinated_])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]' scope='cols' value='People Fully Vaccinated' />
            <format attr='height' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]' value='11' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='height' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]' value='26' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</rows>
        <cols>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States&quot;</value>
                <value>59858146</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='290'>
            <formatted-text>
              <run fontcolor='#787878'>Maximum People Fully Vaccinated: </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='59852655.29664661'>
                  <node-reference>
                    <axis>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.4'>
                  <node-reference>
                    <fields>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;United States&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-39' y='107' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{E9A70070-33F3-4831-B991-71736D0B06E1}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='maxVaccinationContries+ (bigdataproject)' name='federated.1u9to1o0q1uxv01b3j8k61dizu42' />
          </datasources>
          <datasource-dependencies datasource='federated.1u9to1o0q1uxv01b3j8k61dizu42'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6CA57713-6090-4032-B316-8C1D53AAE661}' />
    </worksheet>
    <worksheet name='Top 10 countries with the maximum number of vaccination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Book' fontsize='14'>Top 10 countries with the maximum number of vaccination</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='maxVaccinationContries+ (bigdataproject)' name='federated.1u9to1o0q1uxv01b3j8k61dizu42' />
          </datasources>
          <datasource-dependencies datasource='federated.1u9to1o0q1uxv01b3j8k61dizu42'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max Daily Vaccinations' datatype='integer' name='[max_daily_vaccinations_]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_daily_vaccinations_]' derivation='Sum' name='[sum:max_daily_vaccinations_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([max_daily_vaccinations_])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' value='11' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='height' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]' value='26' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#499894' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</rows>
        <cols>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='246'>
            <formatted-text>
              <run bold='true' fontcolor='#787878'>Country</run>
              <run fontcolor='#787878'><![CDATA[: <[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#787878'>Total  Vaccinations:</run>
              <run fontcolor='#787878'><![CDATA[ <[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>151286560</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-36' y='141' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{E0FFA162-EA2D-40F3-9C9D-4E53DB7DEE00}' />
    </worksheet>
    <worksheet name='Total people vaccinated VS People Fully Vaccinated'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Total people vaccinated VS People Fully Vaccinated</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='maxVaccinationContries+ (bigdataproject)' name='federated.1u9to1o0q1uxv01b3j8k61dizu42' />
          </datasources>
          <datasource-dependencies datasource='federated.1u9to1o0q1uxv01b3j8k61dizu42'>
            <column datatype='string' name='[country (totalPeopleVaccvsFullyVacc)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max People Fully Vaccinated' datatype='integer' name='[max_people_fully_vaccinated_]' role='measure' type='quantitative' />
            <column caption='Max People Vaccinated' datatype='integer' name='[max_people_vaccinated_]' role='measure' type='quantitative' />
            <column-instance column='[country (totalPeopleVaccvsFullyVacc)]' derivation='None' name='[none:country (totalPeopleVaccvsFullyVacc):nk]' pivot='key' type='nominal' />
            <column-instance column='[max_people_fully_vaccinated_]' derivation='Sum' name='[sum:max_people_fully_vaccinated_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[max_people_vaccinated_]' derivation='Sum' name='[sum:max_people_vaccinated_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([max_people_vaccinated_])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country (totalPeopleVaccvsFullyVacc):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;England&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Scotland&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Wales&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Northern Ireland&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Macao&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Falkland Islands&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</column>
            <column>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]' value='84' />
            <format attr='text-format' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]' value='n#,##0,,M;-#,##0,,M' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</rows>
        <cols>([federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk] / [federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;</value>
                <value>104213478.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;</value>
                <value>59858146.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;</value>
                <value>65739470.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;</value>
                <value>10240181.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United Kingdom&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;</value>
                <value>31425682.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United Kingdom&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;</value>
                <value>5205505.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;England&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;</value>
                <value>26644910.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;England&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;</value>
                <value>4146857.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brazil&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;</value>
                <value>16377083.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brazil&quot;</value>
                <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;</value>
                <value>5078476.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='331'>
            <formatted-text>
              <run fontcolor='#787878'>country: </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total People Vaccinated: </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_:qk]&quot;</value>
                    <value>104213478.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='331' y='14' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='389'>
            <formatted-text>
              <run fontcolor='#787878'>country: </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total People Fully Vaccinated: </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>&quot;[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_:qk]&quot;</value>
                    <value>59858146.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='446' y='-110' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5EB43AD9-5482-4592-94A6-37FD43952195}' />
    </worksheet>
    <worksheet name='Vaccine Analysis for per hundred population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Vaccine Analysis for per hundred population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='maxVaccinationContries+ (bigdataproject)' name='federated.1u9to1o0q1uxv01b3j8k61dizu42' />
          </datasources>
          <datasource-dependencies datasource='federated.1u9to1o0q1uxv01b3j8k61dizu42'>
            <column datatype='string' name='[country (VaccsAnalysisPerHundred)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max People Fully Vaccinated Per Hundred' datatype='integer' name='[max_people_fully_vaccinated_per_hundred_]' role='measure' type='quantitative' />
            <column caption='Max People Vaccinated Per Hundred' datatype='integer' name='[max_people_vaccinated_per_hundred_]' role='measure' type='quantitative' />
            <column-instance column='[country (VaccsAnalysisPerHundred)]' derivation='None' name='[none:country (VaccsAnalysisPerHundred):nk]' pivot='key' type='nominal' />
            <column-instance column='[max_people_fully_vaccinated_per_hundred_]' derivation='Sum' name='[sum:max_people_fully_vaccinated_per_hundred_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[max_people_vaccinated_per_hundred_]' derivation='Sum' name='[sum:max_people_vaccinated_per_hundred_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (VaccsAnalysisPerHundred):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([max_people_vaccinated_per_hundred_])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country (VaccsAnalysisPerHundred):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (VaccsAnalysisPerHundred):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_per_hundred_:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (VaccsAnalysisPerHundred):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_per_hundred_:qk]' value='81' />
            <format attr='height' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_per_hundred_:qk]' value='81' />
            <format attr='title' class='0' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_per_hundred_:qk]' scope='cols' value='People Fully Vaccinated Per Hundred' />
            <format attr='title' class='0' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_per_hundred_:qk]' scope='cols' value='Total People Vaccinated Per Hundred' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (VaccsAnalysisPerHundred):nk]' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_per_hundred_:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_per_hundred_:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (VaccsAnalysisPerHundred):nk]</rows>
        <cols>([federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_fully_vaccinated_per_hundred_:qk] + [federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_people_vaccinated_per_hundred_:qk])</cols>
      </table>
      <simple-id uuid='{2C35C02A-5BB8-4146-8242-0FBBE3D372BD}' />
    </worksheet>
    <worksheet name='Vaccine distribution for 2020 and 2021'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Vaccine distribution for 2020 and 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='maxVaccinationContries+ (bigdataproject)' name='federated.1u9to1o0q1uxv01b3j8k61dizu42' />
          </datasources>
          <datasource-dependencies datasource='federated.1u9to1o0q1uxv01b3j8k61dizu42'>
            <column datatype='string' name='[country (DailyVaccsCountryDatewise)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Max Daily Vaccinations' datatype='integer' name='[max_daily_vaccinations_]' role='measure' type='quantitative' />
            <column-instance column='[country (DailyVaccsCountryDatewise)]' derivation='None' name='[none:country (DailyVaccsCountryDatewise):nk]' pivot='key' type='nominal' />
            <column-instance column='[max_daily_vaccinations_]' derivation='Sum' name='[sum:max_daily_vaccinations_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([max_daily_vaccinations_])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country (DailyVaccsCountryDatewise):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' scope='rows' value='Daily Vaccinations for year 2020/2021' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='width' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]' value='98' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]' />
              <text column='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</rows>
        <cols>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                  <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States&quot;</value>
                <value>2170792</value>
                <value>2020</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='369'>
            <formatted-text>
              <run fontcolor='#787878'>country : </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Year of Date: </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Daily Vaccinations: </run>
              <run bold='true'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>2170792</value>
                    <value>2020</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='334' y='41' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='279'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>country : </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Year of Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Daily Vaccinations: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (DailyVaccsCountryDatewise):nk]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
                      <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>149115768</value>
                    <value>2021</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='432' y='218' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{B921579B-FBF7-4EED-828A-A00F04477034}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Top 10 countries with the maximum number of vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF152C05-96AD-4D9F-9BBE-AA807652B4A7}' />
    </window>
    <window class='worksheet' name='Maximum number of fully vaccinated people'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67662940-9DA9-41FF-AE19-F4F4B1460C80}' />
    </window>
    <window class='worksheet' name='Vaccine distribution for 2020 and 2021'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:year:qk]</field>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[sum:max_daily_vaccinations_:qk]</field>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B1AA492-FBAE-482B-AF53-1E6B66AAF187}' />
    </window>
    <window class='worksheet' name='Vaccine Analysis for per hundred population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (VaccsAnalysisPerHundred):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC375962-607A-4182-9B6D-8E6336650472}' />
    </window>
    <window class='worksheet' name='Total people vaccinated VS People Fully Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[:Measure Names]</field>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:country (totalPeopleVaccvsFullyVacc):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FE9A202-623D-4374-AA7E-E98B626B6C40}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[none:year:qk]</field>
            <field>[federated.1u9to1o0q1uxv01b3j8k61dizu42].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8384D0CA-F88D-4ACE-A5C6-257E77ECCA08}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Maximum number of fully vaccinated people' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOydd3gV15n/PzNze1HvqKEuEKKD6c1gg7uNHZckjtM3ibNZJ9nkl2zqppdN
      2WSzm002ju0U27GNTTEd06sBCQQINdT7vbq6vczM7w8JIVEM2AJZaD7Pw8MzM2fOOZo73znt
      fd8jqKqqoqExRhFHugIaGiOJJgCNMY0mAI0xjSYAjTGNJgCNMY0mAI0xjSYAjTGNJgCNMY0m
      AI0xjSYAjTGNJgCNMY0mAI0xjSYAjTGNJgCNMY0mAI0xjSYAjTGNJgCNMY0mgFFIKBQa6Src
      UBRFIRwO35SyNAGMQm51L1ZVVVEU5aaUpbsppWgMKw6nk4c+8uRIV+PGoYKKiiAIN7woTQCj
      EMFoJOaBe0e6GrcEI9gFCuNs78QvDzqlRHB2dOGXr978+Xo66e4N0NcZCNLd1k3wXbaaFQc3
      c6Kxd+hJVSXkc9HccI7a2jqaWrvwh2X6eh9Butq6CV1jeeGAhy5HL8qt3XMZlYygAHrYt2Yj
      jb5BpyJu9q/dQn3g6gMgf28XDk+wXwCdbH9lG52Bd1eTUMBHMCwPORf2d7Fr40aOn6qirraG
      Ywd28NaRSsIKQDvbXtlBd/Da8u9tq2DL7jKuQdcaN5n3dReop6sVyWTD2d6KL6wSk5xBUowF
      UQBrTCKqYEIN+WhsrMXhcVB79jRus4HkcenE2YxE/D00NLYRou9cjMWAIICqyvh6umjpcCCj
      p8sdJPaistsr9tIdP40HF+ShE0COBAlFBISwl4a6OhzubmrOnqbHZCQlI51Yk4jL0UF7lwsZ
      ieiEFJLj7ag+B3X1LTi7wpw5cxqdaCa7OBuTquLraae1owdFb2NceipWgwSqgt/VTVN7FxFV
      JCo+leT4KHTadMUN4X0tgBPb/0aFP4v87CQMSpCyM3UsvX0ZiTY93TWHKRemcXuhGberl0Ao
      QK/TgRSwEJ0so3g72LlpO157KlE6P2Wnz7H89gXEWfW42yrZtquC6JQUDJJAh8N7iQB0kkjA
      H0ABBEFApzeh00PY5+8rL9xXnmC2Epsio0a6OV5egao3Ickhjr99klkr7yRDDNDr9hLwh3E6
      HEiinQxA7q1j/br9RKdloAuc4mRdHncvKwVPJ7t2vIUUk4pJF6G+oQVp7hJSbCPwA4wB3tcC
      kGyJzJ2zgpJ0G4ISYv/WzbT3eEm0xQyk0ZujmDBtChX7fUyZPY90C6Cq1B5+i96ESdy3YAKC
      GubMzjc5WtfJ7SVxlO8/Subc+5iW3vdWWSJdXNw7iS+ez7jqV3nx5Try83PIHp9DSqwFvSWG
      idMnc/JAkKmz55Fq7kuvqkbmL0pGFAVApaNsI4fqnOROH8fkknza5RBz5s5DLwFqgGM7dpFw
      24MszrMjqH4OvvEPypoKKJC68YlJrJi/AIsOVEXRJqtvIO9rASBK6PV6REEAQUAn6eCa5sBV
      uhxeUnITUBUFFYmU1CjKO3ohEKIzkMriNDvnZ9kuN9umN8ey5IHHaa0/R31jHZvWHGfC/BXM
      yEtEvCS9Cqj0NJSzfV8Zvf4IYXcHhsn5l69e2EVDp5UpWdb++hlJGxdNWUcPUwoSsQb384+X
      XRSUTmZqYRZGUQVu/JTgWGQEBSCi06kMWe9QFWRRQjccv3XIwd43X+W0zThwKqZwXF8Zqg7x
      ql9VAUlvIT1vAul5EyhtO81L2/YxIeMebKaL06q0ndjN1poIdz3wQWItOjxVb/Fmh3TF3COB
      Fta+8Gcs509IJopngWhLZMUjT9Hb1sipU2X89djbLFx5F7kJZk0CN4ARFEAUickKTU2d5NsT
      EAXwOrvoMhhIlK784lwePXq9gqwoqGrfaxKXks2U1DyWTM9BFECRw0QUEfQ+YthPc1eQqAQD
      qiITCke4uMSA1w0GMwadhACIogG9QRgoT6eTB5Wn0usKkl0wkVizhCqH8Xn9KP3znqKoB3wo
      qtrXgOmjyE5PJGP2A8xINSGgEolEUAUJQQ4TjAjYkjOZnZyOZfd62jpc5CaY3/WT1rgyIygA
      PRPmLWLTm5vZ2JyC1aDS2dRO3vSl2A3XW61ExufB/s2bqEuKJ3fCRMYXT6Zu6y42OM9hNwgE
      3C5M42ezuCSNSdOz2LplLa1pCUhqhLM1DqblDM2xo3Ive2uDJMRFoxcVerud5Ey4DbNRApLJ
      Hh9h35ZNJCUkUFAykZTsFE4eOMj2jngEJYyrsZrg+L4uUFR8JgnyZjZt30GUPpqpS6YzadEs
      1rz5Oo7kJEyiitvnJ6t0ATm2Tva8dRp9jA2JME6vkZmT47Sv/w1CGMnw6KqqEHA7ae9yEpb7
      pjaT4qPQ9Xeyex0d6GwJWAwiqArunh5ESxRWo46gx4EXG3E2AwDhQC9trR0EVSNJqSlEmXWE
      vD20tHcTlsFkjyU5IRaDTkRVwvR0ttPtDmCwxhFtUhDNMdhNF4SnyiGcXZ30uH3IiFij4klM
      iEbfX7ew30VbaydBwURyajJ2g0BPVzudLj9GWwyJdh0exUhilBlUlaCnm6Z2J6poJTMnDb2q
      4u1pp9PhJqJK2GMTSIyLQlRlPD1ddDp7UdARm5RKnN00RABtTicffemvN+13upUZUQFovDs0
      AQwf7+9ZII3LogSDdL2yZqSrceO4icZwWgswCgkGgxiNxqsnHKXIskwkErkpf6O2xKIxptEE
      oDGm0cYAo5Auh4M7Hnt0pKtx41BVVNAcYjQuj2QykfnYIyNdjVsCrQv0Hgi5Wmno9l094cUE
      Wnn95e30AqocobWxnt5r8IHQGH40AbwHvLX72HKi8/pvVFXC4Ui/M49KJBRC1ibjRgStCzRc
      RLw0NLuJiRZoqm/GJ+vJzC8gyd4/laeEaamrotXpRcKPy9/3xRcEAb3FgqHfOi/sd9F4rh6H
      J4hgsJNXmE+06XptozSuFa0FGC5C3ezcsIb1O47gCgOeBra/dQKvCqoSou7INnZXtIOkRwkH
      CZyPeyOHOFF+lC53X6wfd3MV1Z0eRL2eiKOSzduO4pa11uFGobUAw4gpJo8V999OtADgovcv
      m+n0zyDJ08D+RrjvvkVYdSL4W6itO3nZPOLyZrAi7/xRKfK652nunkpRkvZT3Qi0pzqcCOIg
      5xoRSddn/uzudRIXPw6TdLUGVyXgauf44QOcqe8moqq4/SFunxZG+6luDNpTvSlcaxfGx4H1
      m2Dqcp5YmopeFDi8WTN6u5FoY4CbgM0eg8vRSK8/gqqqBHyeS8Kw9OHF748hZ3wyOhT8bidO
      z60dB3Sk0VqAm4A1Pp3JKdWsX/sGMTYTeiFAp+dyq5xxjC+EvWvXYrca0CHR5ZVJvek1Hjto
      1qDvATnQi1s2EWM1gBKm1x3CGm3td69U8Lo86O1RGMR+BxuHg2AELPYokBVs0TYkVcHj9WIw
      WTHoROSwnx6ni7AqYbFHo1P8iEY7Jv2FxlrzBxg+tBbgPSCZohgI0CLqiYrWD7oqYo2OGjgS
      JANxiSmXZiKI2Gz2C3nqzcQnDfb/NQxnlTUuQhPAaCQUJLx+40jX4oahqn0h0sVL488MO1oX
      aBSiOcQMH9oskMaYRhOAxphGGwOMQjq7u5n74P0jXY1RixwO88Sy5fzkJz/RBHAjUVUFVQVh
      iInEe0dnNlPy1C28RdINJtDjQu7oBrQW4BJ6mk5xqqHnkvO21AJKxydcV169rWfYd9LFkmVz
      0Cya359oY4CL0BmtREdHE2XWc6L8KGHRTHR0NDaz/uo3a4w6tBbgImyJWUxMBNnv4kxVFTn5
      hWTE98dw9rRR4TAyMbNvOw010Mnp2hB5E8YhO5ppC1nJiJI5VVGDKa2AxIu6PV0NZ+nVJ5GT
      GoMi+6kpP05zb5iEjEIKs5PQqx6qT7WQWFTI+TU1j6OJ1l4DeVmJN8VJfKyhtQDXg+sc+yvb
      Bg5VfxP791fhB7zt1ZRXVnFg6ybOtPkxmfSD4nkq+DtPsWNvJarBiCp7Kd++nhNdIikpCbQe
      38mhmk5UQU9HzQFONfYO2I82njxMdde78DvWuCY0AQwjrZVlqFnzuf+uhWTGWwcE4Hc2sGPX
      aSYvW05uvAl/Ww3HndGsvH02RYUTWDSviJpjp/GJJnILs2k4U0lIVgEfTa0ecrPTtK//DULr
      Ag0j8TlTuW1SJhfs1mQay3ZSXRND3vQV5CX2rWy6errRG/U4W1twAihg7OqmJwKJ4/IRyw/i
      9E8mwVdJp6GQuXGaPdCNQhPAMGKy2Qe9/AASGZMXMaPYxptbj9I+KYtUs4gkSXg6ajh+/ELX
      Jr54HGYFDPYEJsWrnGpxkt1cR0rpMqxaO33D0ARwPUgSBAOEFBUx7KWrrYsIV58dsqcWc+es
      brZuPcAdt88mJiGVmHgfMxcuId5qQAn56HEGsBoA9ORNK6Z8437ajRZun2O94X/WWEYTwPUQ
      l0O6ey0vvliF1WzCIvagkHn1+wQdSRMXUNzyIpt32/jA8mLm57WwZc2riHoBUdQRnVjI/JR4
      jAjo4vLIErdxRD+TGL22gHAj0axBr4CqKgSDIfQGI9KAWa5KOOgnEJIRJB0mg0Q4DEazASIh
      wqqIUX/hm6LIEcKyikGvRxBADgcJRgTMZgMoMgG/n4iiIogSRpMJ/YDTvMLxLS/iSl/OwqKE
      S1aRNYeY90agx8XUjm5+/vOfay3AlRAEEZPp4u0gBfRGC/pBVrq6809QZ+Bi411R0mEc9AGX
      9EYs+oGLmK2X2/1aJeyo5WyXlQXz4obVhELjUjQBvM/oOrObNw61MWfFXaSYLz/6FUIhzNt2
      3uSa3TxUVe13iLkxo3+TqlKyahWgdYFGJZpDzPChTbBpjGm0LtAoRFVVXC7XSFfjhqEoCpFI
      BIPBgMlkuqEtgSaAUUiX08ncD9z6G2SE3G6++uRH+MIXvnDDyrj1BKDK+P1hjBbTCPfvZALe
      MHqrieGeydeZTJQ8cQtvkdRPT925IcdKJIjD4SAYVvrPiNji4ok2X2oqosgh3D09eANhBJ2R
      2Pg4jDqx3z5LRZHDuHt7h08AkaCP6rp6MnMK+3Z2ByBIzclK4vJKib14RnHIzX6qTlYTVVhI
      stmAz9lMvUOgKCft+qcBg51sWHOcZY/feSFmDxDqaabWY6YoPa7/jExdRRmm9InE4aK8oYeZ
      kwqus7B3ooNtfytj5sfvJGkYcx3L9JzdwRd/8L8kpozvP2Nn6Yc+zqrJ44Ym9LWx5m9/o6Le
      gdsXRBbDJOcs46kPryLRAq6m07zxxkYOH35r+AQgBz2UlR0jPj1/kAACnD5ygKK0qwhA1JMw
      LhVj/6qnt/scx06LFOSkDdvXM9RdR1lLYp8AVBlH1X72nlVYlatDEmxkpmoOL+93HB2dFCx8
      iq9/8u53TKd0t6DkLeJTDxWTEG0i4nfwi+9+g33VM7kvL8SWTUdJnXknd4hNN7EL5Hdy9JyL
      3JgwZRXVuGUrk2bOIDPOAqqMs9tJnD0ayVHLrgPlnGuD9WoXopTAgrvmEKUqdNVXcPx0A6o1
      hRkzSok7v6qkBKkuO0JVswNJD22uywWevUCgp4GtBxqZe/cDxJkkIh4f7U4/yQmxKJEwddWn
      sEXFUFlRgUcxUzR1FuOT+syblbCf+jNlnD7XhWCJJiszjYyMXOwmkMM+qsvfpqbNhd4KXYEL
      M8wRbydHDh+lyyOTVjCVktwUDJJA0NVETauMLtRKdUMXMRkTmZJr59SxY7T1KuRNm0thqh1t
      PQw623qIjZ1w1XRixjRWZ1w41pttGAmgqoAlg9Uf+xAAh6puZjc54OTwnjfZebyN1PxSJqYJ
      7Np5jACAEqS2shpXMIIuOo2SwmySx41n5qxZzJxRhAUV17kDbNjXQGbRZHKi3GzetA9XREWN
      +CjfuYFTPRZKps1kQk4axneQtRrxUX7wCAlTFpAV2ze7EPF0cbKmEQBFDlP+1ho2HaoltWAK
      xVl2juzfjzuggBqmYtcGDjcrlE6fTml+Gmfe3ktPENSIl7Lt6znri2LS1OkUZyej6zehCLma
      efONLahJhcyYXoLz1C7eKjuHCoRc59iwditdQjxTp5XSW76O/3tlD4bkAqaVplOxfQut3hv7
      04wWlGA7b77wAx5/7Ak+9qln+MPafXR63zl6trvjLK/84pu0ZK5mYdGlPt03dRAsJRRz98oF
      fapTdJw6eAQnDIl+LBmtxMVGYbaJJCUnIwmA6qHiQBXFSx6lINWIQBI9TS9yqtHLZFs7lS4L
      d66ajN0gQgBirZffuK6tYg//qA/jtk3n0YnpfXlfBktqHnOWLSbFJqD6zZRV7yMQChMVrOV4
      exR3rZ5DnEFAVRWijW8B4G87y5lAGg+smIy5P98YQ1/kgc6mauSkEmYVZSGJELcwxIvrTuGe
      Nh5B0JM7eS4zJuVjAILF4xEMM5lUkIwAJNn24wsCmlEo8578HmufBFQFn7OJ5379Q/4vKPGV
      1bMvTazKdJ9+i+//+kXipt3PNz62Cvtl+tM3dxZIEC40OaJ47f37gIvmHpGM3nqq3P2nEHA6
      XHhUJ1H2tCHRk69EQu5UluTD5n1NtPcGyI4xXXaQ3ed9JZyvMoLQl7e3rRlDdiGxhotvUnB0
      9pCYmT3w8g/G43JhTy4ciHVpiI0jOdhLux/Oh8s9f1tfCBVB6/K8E4KIJTaD1Xcv4p83VwMX
      C0Dl1I5n+Y+/V/HRr/w707MSh9hkDWbYukCCICJKEkMtK8LIsgX9ex1f6nQYlBCd7W20tfX9
      U2JymZBmR5AkZDV8TZuw6ExWErKnMn+imZ07DhKIKFe/afD9ej3BYPAyVwQkCcKX3fQCdDo9
      Sih8oYrhMAF0GLVx93Xgp7XZwYVfTMXR1U5SdNxlktby4p+P8uAzX2ZOTjJG3ZVf82FrAfQm
      C2l6OFHXyPwJ2ejVIE1l+3ElFJNgAy4NtXNFDEYrSqiDYETBJCioujiKiuzU23OZNSkVgxDB
      0dWJajJgN8Xj6z5Is7OIrDgTrq52eryBd8hdIGPiPGZ0rmPjwSpWzim89nql5WHZuY/KrjQK
      44y4O5vp7u+fx6em4Nx+hpaiDFJsEq72NlyhSN+1tFQO7SmnuyCZBItI46lT9KSlM04Hmrv7
      taKy/c/fpdY2icnjk5B93eza18IDTz8BQMOe3/LV59z86pdfRTy2kd1iPFOq97O+uv92QzSl
      M6aTquvl4Ntl9HjDVB2rGT4BCHoz0+bfxq5de/nL4R2oCOjtSSxeUYL1Ottze+J48i1neO7Z
      /8NsyeSeJ1aQO3MB9Zu38dejQVRBIjo5k1lz5pAYk8KckjS2rvkrEUFHUkoCwatsKyroLEyY
      u4Rza9ZzNCWBqZezSr7cfaY0Zk1PZPe6v7NPNRCXmk7fKy5giM9hTn4rm196HkVvIiU9mvPr
      NdHJhczMc7Dx1b8QCiuYYjKYv3DmsC+Q3dpYePSL36Wq/Cjl1c1gSuGzX3uInKS+vRXi8pfy
      qScj2A1A3lI+c+cxfIPNRYwSIVlBFcJ4el24PGGSptw3zNagqtrXzKsqKsJA/1oQhIFrF6Ib
      9O2giCAgnL/vorRqX1zBgXNcknff/+f/BFVVL+R/UT/6fJpLyh+EIAiDunD9ZVxUtwtlAaqH
      jS+9zuR7Psg4G0OuCRc69Qhcvo5Dyrso3fk0fcfCkLHKWHGI6ak7xyMp40aRKcT5l+5yg7hL
      zgmXvCQXpx0SCuQKLzaD0r1T6JBLrw19qa6Ybkh5TsoPtpBalE2UQaHpxHZ6YyYTZ7m4HlfO
      9+L8r/f4PHLw1t88Tzm/mfgN5NazBbqh2Imzedi35XXcQYgZN4H775iE6SYbHUmRCBnlFTe3
      0JuIqqooikKGJDHxzok3tCzNIWYUojnEDB+aQ4zGmEZrAUYhPp+P1tbWka7GDUNRFGRZJjc3
      F/17XkR6Z7QxwCjE2dvLHU9/dqSrcUNxnK3i8KbN5Obm3tByNAG8n5EDON0K0TGWIX1VyWik
      4L57RqxaN4Ozb6wbchx2t3O6rm1g6loQzYwvLsB+yRusEgn0Ul/XhDcikJwxnsQYMyJ9g+ug
      u4vG5nb8EYGohFRNANdMyEP52/upbu0zRhIlI/FZhdxWmsc1mCFdM3Un9hFJLCU/xQaeat7c
      GuCB1TMwX/3WWxiVcxt/zDe327ktq+9J6AwprM69VAARTycv/+FXnOixEmUM0u628tTnPkNp
      mo2I5xx//Ol/022OxiCJeHrcmgCumbCfM21+Zs+ej80koYQ8VB3ewetuPfcvyBq2B5maOwlV
      N7Zf90tQvZw9GeGJf/kKDxdY3jFp3dvrOOws5OtffZw4o8L+l37Ny2t2U/qZlZx987fUFzzB
      dx4txaSDtjM7NAFcFzojsXGxRJn1QDzxcyfxxzfO4VuQhdhWRZ0/msL4CPv3HceWO5PSLCt1
      Jw5zoqaVMEaKZy2iJCsOyd/Jzt17aXH4B7JOLVnE4klp9LScxRdTQk6CZigxQMjF2fY4FqVe
      /XWtO3OC7AX/TKxZhwCUTJ/Ob54tQ2ElghJBNZgx6CUEwGy1awJ4d6gEPE7qKs4RXzQdM+By
      tlDV1ELToUbEjCmUpkcTCTgJ6ZNYfMc0DHIvO7duQJDuo3RcHLMXrkBWVCL+brat24Ytqu+r
      72ypxikWkZNw687zXzchFUNSFz/+5JNISMSm5XHbint5ZMU0jBctlDu6G0mcET0wZrJHxaJ2
      9dIF5K16muQf/pbfh+eRZVc4VV6uCeC66K7i739pxqADWdaTlDOB5bOyBgKkt1RVMeeO+5g8
      PqHPG8ycTElpcv9VOxPzxlHf0Q0ZdkxmCyBzruIYkfSZlIyLuUKhGtjT+ex3f8NnAVWJ0Fl3
      mP/62X+wZfz/cnfB0O6iqioMtpUREBAUUAABEYvFStDVTVtAAMmgCeC6iMtj9ZLFRJl1+F1t
      nDy8l92H41g2uy9KQcbkeUzLSRywBfL3NHFk32Fq2x2EZRVvj5fxC/vDqasqztq32dcUy733
      TcR4Jfc0jSEIoo6knNt4ZMka/lDWwN0FQ83ZExKzqXa5UYlFADweF0qinUR6eePH38H04K/4
      9LQoBCDQVaOtBF8XgoBOJ6HT6bDHp3Pb7QvxVOyju78rL0rSEEO45jOHccVM4gMfeoqPf/zj
      3L98Kuctr+Wwi/2HKymZMRmbpHmAvRNedxftHT0oitpvJ9RL9dk2CjJTQVWRI2Eicp/teUZu
      AXUHj+ALq6iqwrkzp8lJzUUijKfHj043dGFNawHeJUokSEfdGTyGFCwG+v0ChqJGZHQWMzpR
      xdPVyJmzTShZ41AjPiq2v4lSsJQJmdE3ve6jjUhPA3/6779jzswj2qjH1VJDnbCc786Ogoib
      v3/9CcqKvs1PnppG3qz7KTj4c37xX12Ms/o4caaXD/3LBwEr937+o3zrV9/EUVpMlDFCZ02t
      JoBrRhAw9Nbx1+eeRScJCIKEzhLLgjtvJ0oPTkmPQTd05iatYAqnt2/h2WMqsSnZxEVFg07E
      13mOA+Vn8Ud7efZof9qpy1k1PQtJZ2AgG0HCaNCN+dYhOmMqX/xaFifLT9LlDpA/aQ4fnpBL
      FIBoZsnHvs0Max4AOnsyTz79JY4dq6AnJLHw7mmMT+mLKBBVsJxv/VsOp87W4wnD5Fl3aLZA
      o5Gx4BBz9o11bPr1bzRTCI1LUVUFv8Mx0tW4oUT8/qsnGgY0AYxC9IrKbNetGy1LVVVmTJ9J
      TMyNnxrWukCjEM0hZvjQpkE1xjRaF2gU0u10cs8Hnxjpagw7SiTCoytX8aUvfemmlakJYBQi
      Go0kP/zgSFdj2PE7nDhu8uBeE8B1EaCjyUVUajKmm2Gs2XuGV3cFWXX3ZN5pe4VbnbC7kT//
      /OtsPJ3Hj//4TXIvDmSmhqk+uIG/vLyJqo5ebHFZLF/9Ye6aV4hB9lJ78jBvvLqG8vouBGMs
      kxfey0c+sJwYoUcbA1wf3ex64y06Lxce9EagRggEwtcS9vSWpurQDtoySxjvCxK5zMOItB3j
      Vy8eZcXT3+PPf/4zP/7SQxx79bccqvcS7Gpmz9Eqljz1b/z+T8/xux8/g/HEC6w54QRV1VqA
      94Iq+6mvqsUVjKC3xJKRkYbdpMPb3YzfmIw10sW5xl7SinKxqX6a6htx+YKIxijSMzOI6d/g
      Qwl7aa5vwOGNEJuaRXpiFOJYX/7tJ9h5jDU7GnnwX+7i+TX/uGyaQHcjHbZcpmbFIQkQnVFK
      QbKfhk4PC2bk8aGP5CFJ/d/62DQKMiwc6vYCVq0FeNeoYc4d3MrB2m6CwQDt1RWcaXUC0Hpm
      LydqatnyxnqOVbcTUhSc9ac529RFIBii61wZ6986RkQFVQ5yYvdmDpxuJhBwcXTnZk42uy8J
      2zgWUWU3O59fR/LKJyiKv3Kf05ozmwXqUV7YfoZAKMC5vS9R7p3IbYXxCKLY//KrqIpM5c4X
      eOlMIqtn9e1KobUA7xbVS91pL5MfX0mheai9jhrycmz/cW6/52FKx0X1ncyfyfL88wl62fX8
      Zs6FZpHmruFUm5k7H1pKrFGkJ62MbceOkZ+yYIz7AUPD0a3sFsfzlZmZiFw5Ep5gTmT5yiX8
      9eVf8PE/eNAljufB1Y8xztb/eqsqns5q1r3wR7a0JvLFb36F/BgJQpoA3j2ijYkzknj1uReo
      zMlj2pRSUuJs6CURRAN50+cyIbUvcjGqihzq5eiuHZxq6iYsR3C1ergjAOGuVsIxaeiUIH4/
      CHo7EaWJyHXuXXDLIXex6ZWtTLj3K8gBD70BL6FIEK+7l5AlCsNAg6DSdeJN/ndnK5/66k/J
      SbIScDTw/B/+xAbbP/HgtBRkdzU/+9YPMM14iB986k6SrBdee00A7xodyaVL+HiBh6a6Mxza
      +Ar6ooXcOzMXQacnOiZmYI8wwi62v7EOy8RlPLY0GYMU5Mg/XuvPJ0LDid285ii/0B+Ny7ni
      9k1jhu5mGhQ9nX/+Pm8B4ODQqRpavuHhc9/5HfPSzydUaKk8ii55GXkpfY4u1jT6no4AAB/k
      SURBVITxFCVI7D3VgDxB5Nnv/pCEx77NpxdkobvouWoCeLcoMr5AEL3RSnbxDFLsEn8r7wYu
      Y70YCtApxrEqJxG9CEGfm15fCBOgT85kYo6eRXcvJNYsoUTC+EMypv79zsYsSZP53k9mDTpx
      gv9374t85Jffo9AO/sZtfOe3ZXzua/9C7qxlhL//Gi/nxnBbbizuxqO8fsjBqi8V4a4/zA53
      It/J1dPR2tKXlSBijYknWtIE8O6RfZw9cpAmbxiDJOH3uCmaMO/yac3RTE2EzRs3EW3Ro6oh
      2hxekgCzPZeClBq2btxAjM2EHAwgx2Rz++ySMT33fykJLLh/HnH9m8KLxjjy87Iw6gSsWYv4
      7vfTWPP3l/jNBhe25CI+9b0fUpRkobc5hblZEX73Hz+/kJXBwuJHP8c9JXbNGO76COHs8GBN
      iMMgqighPx2d3QQjKgZrFAmx0eglgYDHQVgXjX3QapkS9tPR0UlQFomOT0AX8iFFxWGWVJRw
      gO5uB75gBJ3BQmx8HGa9hKD4cfQqxMQOna67Vf0B/A4ns3rc/OAHP7hpxnBaC3BdGIhNOr8p
      m4BosJAy7tJATSZb3CVfb1FvJmVc5oUT1vMpBES9mcSUcZcWJ5mJix2OemtcCU0AoxA1GMTz
      +rqrJxxlKLLCuLvuuqllal2gUYjmDzB8aCvBGmMaTQAaYxptDDAK6XI4WPzwQyNdjeGjx0XV
      yZHZ9E8TwChEMpnI/9Ct4xFW/fzITelqArgCIWcT5TVtfQeCiC02mezMNEwXr6W/R1Q5THND
      A7aUTGLMN3Y/rNGFyrE3/p3PfX49//TGBj5YGndJimDVJh7+8m+wWewD5+755//gsdkpdNfs
      5/nnXqGsppUQembd+wmevHcOMSaRrrLnuf+BX7P0Z/+rCeBKeJrKOVxnYk5+HKoSpvboDs62
      zmDlnEL0w2qsLyCK0mU31x7LyF1lrDsUYcXi6Vz+s6DS2d7IxLs/ww8/vvKia0G2vvwnTLO/
      wP98owilt4GffeP7rMtM54O3ZYFkYvGDd+E8eVobBF8RUUdSVhFTpkxh6rSZLF+xDE/dCRz+
      MBCiqaYOX39AUEWOUF9TiScoAyq97TUc3r+PfQcOc7axC1npm2l2tlRxqP98ZVM3Kn27yquS
      iNRvUB329XD2xNvs3buX/UdO4PRfLurorY0ScvGP51+h5KHHKI65QquoyrTUuclMTr3MxVqq
      3s5m6dIJGHQiprgsHrpnEsf3Hx1IYciaxXzdcU0A14rOYMCmNxBWVcBPxcGjuMJ911Q5zLFD
      u+j2ykQctWzeeQJs0USZBapr6giFZVR3DZu3n0C1RBNlgvoztfgB5BCnKsro9oQAcLfW0ORR
      iYmNxRRoZMvWw7gu5wd4y6LSXrmXGqWUhcWJ75BMwdXTzNrffIvHH3+MT37+33hl1ym8YQWw
      Y7DX09jkRlH7IkrHJ42j0dk+KAMbk+YXaF2ga0GRgzSeqaDHZCfW8M6PLNjTjj8qgykTJ6IX
      oaT/vNzeiis6l6klEzBIwsD5i4nLnc7SAYPSIvzrn6fVMYPopLExPpB7a3nplf0s++hXiTe9
      g0+EaGD50z9j+dMAMr0tVfzx5z/jvzxf4MurSrjnsdv4w//8iBNpKRiMFozBKro8GUOySCmc
      pwngikQClO94he5jOjy+CFnF01m2cAYW/TuHgzCnFZBRtokX/lZNbl4JBYVZJEVbkVImkr1/
      Dc//rZLi4knk5GSSHGu9KPKzitfRzLHDh6huchJRVdz+ELdPjcAVesK3FEqIw6+/QKN9MiuC
      LdTWBmh39UJTPS3jdKTGRV1hrCQRlVbIJz+4lI+8ehLvqhIKlzzOvxaeo6G1B0FvQW1XqJCi
      htxljk3WBHBFdCZKlzzEPRNEtq3fjDEpjaQYy1UHq6IpgUX3P8oMRxvVlafY9FolS1bfRaY9
      luUPfxhPTzuVJ8vZvOYkSz/wMOlD3msvh97cjm7mCp5YnoxeFDi8+daz+rwicoSQNRlzTxkv
      PHsMSYpwuuIk6F7ApD7GUytnDDi0KIpCj9NBdFxCv/OQisfdQ1RsNnpA1BlJziwkObMvmPDr
      v32J0uLHhxQnGKI0AVwNgzWZpXetYOeGrWwPh1k8IxejJAJhwhEZRVZwOzvx9IdKCfvdeMMi
      9tg0SmdFE+zYSLc3QpoUwC0biIpJZdrcGHD+jTY3pA+Z3fMTCNqZkJGAhIzH6aSrN0j6Zep1
      S6K3sPDBTzPvvvO2QH5e8n4b9aNf5wOlceBr5D+//EXGff4l7hsfYMP/fZ+ulKUsLMkg1NvE
      6y+e4v7PPogBqNv/OgdccRSnWHFU72O/q5Cn5+RdVKCkCeCqCAJGWwqLVi5jx7pNbBcEls3I
      JTlZZdfaV7FZTeglcPYLIOTu4PChMtxhQFVQjGncHmtEdjWxZ/8pwjIIqoxiKmZFAn27tw0Q
      S26xjj1rXsNiMWIyWnAG1bEjgEswMenuuyGlPzyAzsbkxSuJjgHJYOaxp7/J229tZefWNxFs
      6Tz85e8wOTsegOSCycRs2szG8l4Ssibz1S8vJ7bfmcaSPIllcyzo0KxBr4gc8hNQ9ViNFyIL
      hINe/BEdNqsJJezH4/GhCDpMFgtEAhhMNnSiStDvxRsIgSBhstgwG3QIKAR8HnyBMIgSZmvf
      eVQFfyCA3mBCJ4kokSAet5eIKmKyWpGUEILejEF3YcLuVnOIqX7+r5zds3fg+GZag2otwBWQ
      DGasg08IAnqTbWAoKhrMxMQNClxiPH9FwGixY7zET0bEZI3CZL3otCBiNl9ILOqMRMUO/uHH
      wOB3BNEEMBoJhRA3bR3pWgwbpWmX8Ya7SWhdoFGI5hAzfGgrwRpjGq0LNEoJhUIjXYX3hCiK
      6HQj//qNfA00rptORzezH3xgpKvxnpidls6rr7wy0tXQBDAa0ZnMTP7Ih0e6Gu8JcdvOS0+q
      KuGgD49fxmi+TP9fVZEjIXx+PxFZQRD1mC0WjHpp4JrfHyAsywiiHpPFglEnIgDhoA+vX8Ya
      HYV+UMd/jAhAJexzUXO2kvYeP6LRSvr4fDKTo5E0Q/z3DXKwh7/98mme/XuEf9/4Z+alXJTA
      18G6l15kX2Udfm8IRRWJyZzNZz73BMmCi62v/JG3TrTh9flAkDAmTeELz3yYcWaJHX/6Bj/7
      v2M89dwGHiu+MH09JgTgdzayZeMerNlFZIyLRw70cHrPQXR3LSHDbBjp6mkAqArNxzdxzjaT
      2zKqL59GZ2XiwrtZ9GgGUSYdYU8nr//mm7x0aCmfnxdH8bx7mXF/JrFWI2FvB2t/8QyvvX0X
      n5ufBNZMHnkqhpNbD+ErXIRFBNTIGBCA4qV8xw7MpatYPCFxIOpycYk6YIWgygEaz57kTIMD
      a1IOMyfnYRDB21FHmxJPptXPsbJqYnJKSLcEaOsJIng7qGtxYE3NZ+L4WOpOlNHmVsgonkL+
      uFgkQaWntYZTledwh1TsyTlML8nBKIGns5nOkAGdu5Gqxm50cZlMn5SPVfJypryRlIkTienX
      pburniaXkaKcZIRbuLUKdp7ghXWVPPTME6zd/p+XT2S0kTdogzCj2YROFdDrdYh6E5nj8weu
      GYwmJNWM3nDhmdkLlpK0ZztNPXMpiNOjBJy3/jSo0tNIhTeRGUWJQ0OOCwKiIAAqVYc2s6fK
      S0FRPqaek2zaV0lQUfG0neXk2bPs3LyF1oAeu9WAz9nA5tdepylkI7ewAGf5mzz34maCUePI
      zUyg7OAuutwhIEBrQyf2tByKC3IQmg+wrawdBehtq2bz669wxqkjOz8fXftJDp3tAMFIT+MR
      Tjb0DOwL1nDybRpco3vG52qocoDdazaTvOBBiuPe+ZVU1TDN1RUcO7SDX3/v36mIvZMnZpx3
      nAnRWl3J8UM7+d1Pf8RR+woenhI/cK/OkMD4NDNnalsBcHc13PotgN/tJmC1EysBYT+njx/g
      bEsvEMNtd84l2eCm4nQvcx5aSXa0nvSUGFpe30Rn73j0QNOZU8xYuJzFhSnoBIFuh47MKfOY
      M7kInaASzinAYilgxoRMCHmprqsnGIoAFopnzxmoR2aKwssvV+OdlgxIZE1fyvLZhQAkyi1s
      aOoBMZWcgvHsOHuW0PiZGCUfLe1expek3NJf/95z+9jWZuPpx4sRabhK6gCHN73K8fYAojGO
      WLsFYcBH283RTRs43NaBYIwjIdY8dK81Sc+Mkgz+WFnDvTMyaa86dOsLQBJFBEVBBiTJQEbB
      ZOLHOdj9+n66Q7NIDrXS5bfgdTRR5wCUMEFVwe0PEgekTZjN9MLUIRsrCELfP4S+g8u+nEqQ
      +tPHOVp+Foc3iIqPYLiIPg/f861PH6J44asXOy4f3fH9OHyTSfCepsM0gXlxt/A4JdjGi7/5
      A6Zpn6Dx1FGaaKbJ2c7p40fInDWdjLihYYYFwc79n/0G9yoRfL3dHHztv/j1P5L46mOT0RPP
      XZ/9AqsUBV9vF8df+wU/XZPNdx+eeP5uUiZNwbB2C/WBKRzb33LrC8AUl0CMq4ZmP2SaJWzR
      cdjMItbzxmt6PUpvJ+dqagYiOsek5BNn1UMnGC2WS3YVuRZCHafYeaqX5aseJiXKiCA08fof
      zl71Pr0tnpIkONXiJLu5gXGTbu8bsN2qhFUSZy7F236cfV0A3ZzrbkE8tI+i3IlDBKAoMiAi
      igKiqMMWk8yEwkzWbmsmqJYgKhKSJCCIEtaYZKZOzOZX25oJMXEgD9Gey+L8F9iyeRe1+mm3
      vgCwpDOz+Bi7t+5nxeKpJNhMKJEQoXCkr59tzCA/10ps/nQmZ8agRoJ0dPUQZdTR+x6Klf0+
      RHsisTYjcshLe3MDbuUa9v0S9ORNK6Fs7V5azTZWzrs0/PothS2VBx7/+KATtQR3u1nwyc8z
      L8UI3fv45Kd/z8d+9SxZrt08++oeCktvI8oqEva0cXDHGe76zCOEW4/wu19uIWPudBKjjMje
      dnZvrubjX3j8olD1evIXzee3//R75v3bD8aAAASJ7OlLcO3ZyebXX0JWBCSdhD4pgySDHgQd
      k2eU8Nb+dZzcqSKIeqIy8lk4M/7qeb8D5tQi0k9s5m8vlGO2RJGYZkC4JtNmASkmh2zjFo4Y
      ZxJ1FR/kW48E7vj0IySd1711PB/4yONkRUFy8lye/EAUBw6for4jgCEqldX/8lUmZNpBnsaH
      Pqnn0PFK6ms8GGJSWP3MV5mUbUcAJsxZRtieAEBU+lyeeiZCbmnWGLEGVVVUVSESiaD0B+OR
      JB2S2Nd/V1UVORLuj98jIOl1SIIISgQZEZ10oQ+iKjKyCpIoIQgqiqygCgKSKIKqEpFlRElC
      FPriBYUjCoIgIukkVFlF0ouoioKiCgP59uUpDCpH4diWF/FmrmBeQfwlfsi3gkOMZdtO/vHS
      S5e9pjnEDDeCgCBI6A2X/5oKgoBOb7j0YUi6S84J4mA/UgFRGpSnIAwx8BIlPcbBRYoX8hjc
      rR+cp6qqhB1VVHbZWTw/9opO+GPhu3UzGBsCGEV0V+7mjcOdLFi5ihTz5Ue/YjhM7K59N7lm
      w8vMOXOunugmMDa6QLcYmkPM8HErT7BpaFwVrQs0ClEUhdbW1pGuxrvCYDAQH//eZtiGE00A
      o5Bul4sFH/rgSFfjXVFoMLJxw4aRrsYAmgCGkaDXhWqMxjRsT1XG6/ZhtNrRDXbiMBopfvjB
      4SrkpiJsvEw0C1XF5+qgwxkmOTOdKxl+qEoYt6MLvz6O5OgL4wM50EtjSwehyPmFRj3JWZlE
      GyX8rg5aOnykjM/GOvh3UYK0N44BU4jLE6Kp4jjldR2DArMJ5M1cRlHyxVtcXzs1e1/GM/Hj
      zBq2KB8e9q7dQskDq0kzXz31aEUJ+3jtD1/iT8/5+Nb2V5h7yebgKhFPK2tffInyt3dRO/1b
      /PljkweutR18gX99tozizPMeNDHc9+lPMS3VwpE3fsuP/3Mr9/1+E5+YcsGUOtRygC/+84/G
      qgDCNJ5sInbGdMZbL3xJrNFaEKqbjirT8varVJsWsCC3/AqJPBzcuBNjwVI+mqXy/+oH3x+h
      6VwvSx79PP90x8RLbzUn8eAn7uPUurfonXQ3UVLfPacPHiN3+R1jVQAAemKTkkixD/20qnKY
      mqrTWKOiqTpRTndAR8HU2yjOiEUU+p1nKss4VtmMarCTPj6TvMxcYmyDH6VKyN1F2dGjNHV5
      0EclM2XGdMbFmAGVmopDWOPSOFN2lJ6QnuKZCyhIsyMCcshDVflhzjQ40dlMuPzXYD80igl0
      VPDs+hoe/uJH2LTr5BVS2Zm3+jEA5GMHYbAAlBCNrSppk6Iufyugz1pCbtMr1HatYEqyASXk
      5VCtl+nTirVp0ItRlQg1R7awYXclaRNnMXfKeCoO76HbGwJkKg+8yb7qEDPnL2b+zGJaTh6m
      y3fxNkYKPZ1dmNMKWbBkKZPSBLZt3Ytf7nuZz+xdx5v7q8iePJc508Zzcv9bdHkiIPs5tm0D
      VYF45i5axOyS8eilW9cPQFXD7HpjPWnzHqI49l3+nbIKhk6e++GXePyxJ/jU57/GH9cdoDck
      X0gj2CnKT6biVC0APlc9zqCZ3LT4sdwCOHjrlZd5u9/YTBBEZtz5GHl20MVmcvucRWTFGSFs
      IV5fgycUITHYQUUNLFg9jzSLiKrGEGsXuXQlUSIpp5ik/qOE6BLSy3bSKctkSjrMiVksW7aE
      rGgBNWQhylKFPxAi7D3LGf84HlhRilUC0BFjGJn9c28Gwca9bG6I5guPFiPQ/O4yMdhY/cx/
      sBpAlelpOc3//vynvBKXzlNzz8fVFiiZmMf2t6thSRGOyn0oOctJsjrHsgBimLNqAfm2C4Ne
      gwmQAVFAOL93iyAgCiIqKjha6EkqIPVqBvqqjKOpkoOHy2nt8aAoETrPKWT0T9z0+dII/dkL
      Ax5NztZmYsdP7X/5b3ECrfzpR7+Eko9Qtnsz5XRyuvUcka0biJk7l4LkdzHqFyRi0ibywVWT
      +Fp53SABQEJRKQl//zuV3rkc39HCgn+aiM6/ZywLQMRoNmOxDH3QinyF5AB6A/pAgDDwTov0
      ctDNoaMnSZ+2nOWZcehED3ue337V/qZebyDovrX9fwdQjUy870lsHW4c3QBOvKEAvc5uvMFr
      3xkzHHbT3S2TnBLT/0kJ0VTfQlZK8pB0gnkct0/2sWHDHtpNk7g3USTQoK0DXB/x2ST3vk75
      uRymZ0bh7W6mzRHi4vA1KAqyKmGzmRHVMO31tTR0uUi+XJ6DiE7PIfDGcWrzk8iO0eNqb8QR
      uEUHweY4Ft4xOLpdPV1ra5nx8IeYGSsT6djDR576GR/677UsS+3l8MG91LW5Uc4dob6uh5fs
      Z0nInMS0Ihuv/PaneFMnkRVvx9fdwOHaFL78rayLCtSRu3wlRx/+d277xo8wAwHGsABEycHm
      vzzHHl1/f0MQmHz7Y0xPE/v8iIXBacU+H14hhunzS3hrzxrKQgIxKVkM9roW+je8lkx2SnMT
      2PHGX9kuGBmXm4neaBzYEE+UdEPzF/t2CRajs5g/uYVdr/+FHYKZ1OxURN1Y6A8BJHLPlz5G
      7PlN320FPP2N/0dGIkCf/4Zer4f8O3km//w5CaN9HJ/62rc5XV7GuTYnMcUL+bfHS0m19bXR
      E+asJEvfFzXCEDeVZ374ryQW922VZE2YoFmDvhdUNcS2114kZ9Gj5MTfvDWE0ewQI2zcyvrX
      XnvHNJpDzPsWPxWHTmLLyiHWLNBd/TbtujxmR93kBTRVJeT23NwyhwnD++x7qwngujCRmGDg
      +KGdOH0ytsRs7lk5E/tNfv91isKEhnc5bTjCFC5fPtJVGILWBRqFaA4xw4e2EqwxptG6QKOQ
      SCTC2bNXD7L1fiE5OZmkpKSrJxwBNAGMQno8HlZ/4+sjXY1rIuh284mlt/P1r78/66sJYBQi
      GQzkrrxjpKtxTbhbWoYchwO9tDQ00u7oRRH1pGTmk54UhU681BguEuiloaaGDncQU1QSBfnZ
      WPq3d5GDLqorq3H6ZGJSs8lNT+wzHFRCtNZW0e43UVCci2XQGy4HHZw4Wok1ewL5qdHAGBNA
      wN3Gvq1vYZywjHmFiYOuyLSc2MuucxEWzp9LWuy7d4rReGeOv/lH1p9RSbDrUZQg9S/8g2Uf
      /zyrStOGJlQ9bPrTf3LAYSPRrifc08L69JV87sOLiQq3seZ/fscxfyyJxgj1tc8z87FneGze
      eAg5ePm//4cjDj8f/eavWZx9wdTFWf4Sn3v6j8z4xE/55acWA2NMAGF/L96Al8ajFUzMW0xM
      /yKr4u/k0PFuAnoHDs8MTQA3kEkrPsbEVWbMBh2oCme2/Be/37GHVaWPDEnnP/kmz7Xm8t//
      9hgxegk55OKX3/4i+89OJr/9TY4wkW99aTVGCXqrNvPln/yZ6VO/TYEIROWwolTh1NsVLMia
      0bcvhOxi14YKVn1wFaFBPpdjSgAgoIvOJjPUQkNnkJiUvmk2d0cb/oRkUnzOgZSqHObcyX0c
      OtmAak1jwZJ5jIs2QaCHfaeamTkxm9rje6nyxLNw4XTsqpuTh/dRVtOOLaWARYtmEWvsa64j
      fidl+3dT0eTClpjH7cvnECWp9LadZffet+kO6MiZMoc5JRkQ9HDqyC7KarsxJRZwx9KZ2A23
      zmSdyXrBcUVFoKfTjT2q+JJ0giSgC4Ok6zMb0RnNGIQwKgJdzR6y0kox9XeHogvnMz/xTxyr
      9lBQ0Hd/dn4xWw+fISxPQ9KJhDrOsitYzOosB1t7LpRz6zzZa8ZAVkEWrdV1RPpXQJobm0jP
      yByUJkLd/rXsbbKy4v7VLJ+WwO6166lxhlDDPqob6jm+cwNvt+mYOX0iFiHI3o2vUC+MZ/UH
      HmF6WpB1b2zDEYhAuJdd69fjjC3l4UceYk6ODU8IfB2neGPLSQrm38Uj9y8lQYwQUfwc3vAK
      dVI+Dzz8EHMzgqx5fRtd/ncyUR1tBKl/ey//+Puz/OzbX2ZtSw6fWr3oklSm4rt5Mq+Gn/z0
      d7z88ov87kffRpn6NAuLoknKsnHyyF6aegMoqkrAE8QYF01NU/vA/bFZRaR1nOOkKwyqytmy
      MnKmlhB90VBjDAoAYhLG4ettJRRWQA3S0ekhLXXQmCDYyYk6gYVLpxFrNROfWcrMfCOVlc19
      TvQdVXRYJ3LvysUkx5hQQ+20uxK4bVoeJqOJ9KIZZOt6qO/y4msuo9E4gQWTszGbLKQWTiLN
      EqLu7SOkzbmTvJRoTLYEiiaMR99TS2U4k8Uz8rGaLKRNnEeBtZOqZtdlnG5GL33BgEWik7PQ
      +c7R2Om+TKIgobABq9mAIivorHZkdy9hGTJn3MP9k+B7z3yCJz/4Cb77679R3eXBPHjhzJjA
      ilk6tr7djgpU1rdQeL55GMQY6wL1YYpJJCVSToMnSJ5cQbu+hNti9VSdT+DuocOaQOpAbE6B
      qKQEQhUOZDUVEotZNqtwoAmWe9sJ2cZhNfUdCzojKbFQ5wyR5GsjIXMJxiGfGi+tLZb/397Z
      xMRVRXH8N98wA8MAAwwfBUpLB6gotmKhNBMaoFG0Ltx1gUkTW10ZV3XVjQuMJo1NjCtdaIwu
      Sm20prqpSdEWlCaAbaQC5dOhw8AMBWYezJuZ964LPuy01rCw4Hz8lu+9vHfvuTnnvvfu/Z/D
      7jYLDwakFb8PXZ4D6+ao6Mi2ZTGxtAzkPCFrbDcmyutdlNe7QAj8g5d4+9Mu6jrfeCCPv8rw
      5fP8aHyJc282bUbpS+fP0NVdyqnWSlo73qK1Y/2ECPLV2QGsZXZg4/1GS3lLO9F3v8dz+Bjj
      k2ZOvJbP/YnY1iTlDIA2HefuNIbH55n+fZqi2opYgYspjYzQKkF1I+4KwtIKWvN6zSmN9m/F
      GKA1Z2AIBYgoa9cLoRCUNFjMOiyZVqRgEDUmhJvIygoTWFZjIrvJbCEiSUQ2DwpCsowpLVG2
      PYQJLEqEIwpCCAQCg8mCokRRADUqE5RWEQgikSiEZcJRZT19vYwUCCErCqgKITmMKgRCVZi/
      fZVeGmksf+jnhaUaZ7Gbvm8vslTTjuMfRGZJOQOAlpyqWrRfXuVaegGvHnnIcJmF7M/u4ee+
      SdoOlkLQw+CQl7Ijh9Cx9Mjd9OllWPU93B6upKGqgGX3CHcCJo4WZGAz1mHu6mawxMozu6xI
      817U7GKq6iv45tpPFB1rxJ6mMOdbIdexh11Ll/llpJSGvTmszo1yZ1bl8IE8EkMa76fr/Y/x
      2PPJSdeDRmVuepZXjp/EAngHPuPUB+N89Ekn+188SeWHn/Peud/IzzAQDnjx6w9wurESlqe5
      cOEKAVWHiITweGROvH6aXD0QIyYzUF1TztnO73jn4hn0PCouSqrNcJJ/gr5b8zS4niddp3Dr
      yhf0G5+lo+VptBpB9w9dFNa14yzKJLzs5dcb1xnzLKIaMnnquSbqnMUYV7x8fWOE4y1NGDfS
      tQlBYO4uPb39zPiCGDLtHGxy4Sy2odPAffcQPb0DeJYjmG0ltL3chl0vc7f/OjeHpggJAyVV
      h2hu2EdodpTe3pu4F1bRp9tpaG5mb2FWTInXeNIDBO7d4wWjeXMleHXJy9T0DAuLEkJvxFFa
      SakjG4NOQzjgYdQdomJPKVoRRRMJMjY6hk8KY7Lk4qzZR5ZJtyZ+n51iZNJDRGOkpMJJSZ51
      zUZqmBn3PLZCBxaDDjkwzx+TC1TXOjEikPx/4otYKXPYgCRzgEQhnh1gK6QEMSn+FaGqBD2z
      O92MLbHi80PR/7fQX8oB4hAj0KqNkzSOBUW4XK6dbsVjSb0CxSGyLMfUIks0hBBEo9E1EfwT
      JnGtmOCoW6k5HKdsxOTt6GPKAeKU7YiOO4WqqiiKsi19TM6FsBQp1kk5QByi1Sb+sGkeVyD5
      v35O6iM4RTLzF/ZXoxYRJtrNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACLklEQVR4nO3WQQ0DMRAEwU0UAOaP0gwcEtbdo6sAjPbT0n7OOWcg6vv2AfAmAZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASPvdGNl735iBx10JYGZmrXVrCh7jBSJNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpf8ooCIDnypLHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 countries with the maximum number of vaccination' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3AcV57n+cnM8oWC947wIEjQeysaifJSSy2pu1fdPd29PTuzd7MxN7t7
      G3F7s3ETd3s7vWdmYjr29u7ienu2pTbyLcrRit4TdABhSXgPFApVKJSvzHd/FEgCICiCIkgA
      RH4iGERlvnz5q6z85u+9l7/fe5IQQqCjs0CRZ9sAHZ3ZRBeAzoJGF4DOgkYXgM6CRheAzoJG
      F4DOgkYXgM6CRheAzoJGF4DOgkYXgM6CRheAzoJGF4DOgkYXgM6CRheAzoJGF4DOgkYXgM6C
      RheAzoJGF8A8JBwOz7YJD0Q4HEbTtNk2Y0p0AcxD5lsW61y21zDbBug8OK7hYb77kz+ZbTOm
      jRACCQmk2bbkbnQBzEMks5nE116ZbTOeCGaxCRRhuH+QgDpukxZleMBJQL1/e9HvHmRoJEjM
      uYYY6hsi9C2bmbXnD1LTOTJxoxCE/R66O9poaWmlq9dJIKIS8+YhnH1DhKd5vkhwFKdrBG3u
      tgQWLLMoADdnPt1Pp3/cpqiXs58foj0Yue/RgREnrtHQmAAGOfLx1wwGv50l4aCfUESdsC0S
      cHJi/36u1t2gtaWZK+eOcqyqkYgG0M/XHx9lKDS9+kf6ajl08hrT0LXOY2ZON4Hczl4USxzD
      /b34I4LEjDzSE23IEtgT0xCSBRH209nZgmvURUtTPV6riYycXJLjzEQDbjo6+wgT25ZoMyFJ
      IISK3+2kZ8CFihGnN0TSpHP3155mKGU1r28rwSCBGg0RjkpIER8dra24vEM0N9XjtpjJzMsl
      ySLjcQ3Q7/SgopCQmklGigPhd9Ha3sOwM0JDQz0G2UpBRQEWIfC7++kdcKMZ48jJzcJuUkBo
      BDxDdPU7iQqZ+JQsMlLiMejDFY+EOS2AmiN/oDawiNKCdExaiGsNrex6ejdpcUaGmi9SLa3m
      6XIrXs8IwXCQkWEXStBGQoaK5hvg+IEj+BxZxBsCXKtv45mnt5FsN+Lta+TrE7UkZGZiUiQG
      XL67BGBQZIKBIBogSRIGowWDESL+QOx8kdj5JKudpEwVER3ianUtwmhBUcNcvXSd9c8/R54c
      ZMTrIxiIMOxyocgO8gB1pJUvvzhLQnYehmAd11tLeGn3chgd5MTRYyiJWVgMUdo7elA27yQz
      bhZ+gAXAnBaAEpfG5k17qMyNQ9LCnD18kH63j7S4xNtljNZ4lqxeSe1ZPys3bCHXBghBy8Vj
      jKQu49VtS5BEhIbj+7jcOsjTlclUn71M/uZXWZ0bu6tsUSeTWycpFVvJufkJ73/YSmlpEQWF
      RWQm2TDaElm6ZgXXz4VYtWELWdZYeSHMbH0qA1mWAMHAtf1caB2meE0OKypL6VfDbNq8BaMC
      iCBXjp4gdePr7ChxIIkA5z/7iGtdZZQpQ/jldPZs3YbNAELT9MHqR8icFgCygtFoRJYkkCQM
      igGmNaYscLp8ZBanIjQNgUJmVjzVAyMQDDMYzGJHtgNpbFhOmmJ4zmhNYudr/4Te9jbaO1s5
      8OlVlmzdw9qSNOS7ygtA4O6o5siZa4wEokS8A5hWlE5tXsRDx6CdlYvsY/aZyc5J4NqAm5Vl
      adhDZ/noQw9ly1ewqnwRZlkwJ8cQnwBmUQAyBoNgwgtCoaHKCoaZ+K3DLk7v+4T6OPPtTYnl
      ObFzCAPyfZ+qEorRRm7JEnJLlrC8r54Pvj7DkryXibNMLivoqznJ4eYoL772Q5JsBkZvHGPf
      gHLP2qPBHj7/7W+w3dqgWKhYD3JcGnve+ikjfZ3U1V3j91cusf35FylOteoSeATMogDiScvQ
      6OoapNSRiiyBb9iJ02QiTbn3jTM1RoxGDVXTECJ2myRnFrAyq4Sda4qQJdDUCFFNBqOfRM7S
      7QwRn2pCaCrhSJTJZwz6vGCyYjIoSIAsmzCapNvnMxjUcecTjHhCFJQtJcmqINQIfl8AbWzc
      U5aNgB9NiJgDM8ZTkJtG3obXWJtlQUIQjUYRkoKkRghFJeIy8tmQkYvt5Jf0DXgoTrV+6yut
      c29mUQBGlmx5igP7DrK/OxO7STDY1U/Jml04TA9qVhqFJXD24AFa01MoXrKUwooVtB4+wVfD
      bThMEkGvB0vhBnZUZrNszSIOH/qc3uxUFBGlqdnF6qKJNQ40nuZ0S4jU5ASMssbI0DBFSzZi
      NStABgWFUc4cOkB6aipllUvJLMjk+rnzHBlIQdIieDpvEiqMNYHiU/JJVQ9y4MhR4o0JrNq5
      hmVPrefTfXtxZaRjkQVef4BFy7dRFDfIqWP1GBPjUIgw7DOzbkWy/vR/REizOT26EBpB7zD9
      zmEiamxoMz0lHsNYI3vENYAhLhWbSQah4XW7kW3x2M0GQqMufMSRHGcCIBIcoa93gJAwk56V
      SbzVQNjnpqd/iIgKFkcSGalJmAwyQovgHuxnyBvEZE8mwaIhWxNxWO4IT6hhhp2DuL1+VGTs
      8SmkpSZgHLMtEvDQ1ztISLKQkZWBwyThdvYz6AlgjkskzWFgVDOTFm8FIQiNDtHVP4yQ7eQX
      ZWMUAp+7n0GXl6hQcCSlkpYcjyxURt1OBodH0DCQlJ5FssMyQQB9w8P87IPfP7bf6UlmVgWg
      8+3QBTBzzO1RIJ0p0UIhnB9/OttmTJu5HAyne4B5SCgUwmw237/gHCEUCsWGs+8/9PbYmXsW
      6eg8RnQB6Cxo9D7APMTpcvHsD74/22ZMGyEE0lSv2+cAugDmIYrFQv4P3pptM54I9CbQAyNQ
      Q15am+qoqa6hsbkLbygK/k7++NEJvFMdooXpb2/D/W0zdnQeGboHeEAiPien9u9jyL6IvCQL
      rr4e3MLAhuyxcIapDhKCaCSMQU8Jm3PoAnggBI0XDuPJ2MRrW0omus9AJwhB0N1PV3s3ftVI
      fmkZ6Q4zKDImgw2TSQIhcDt7iRps+Ac7GRwJ4UhfRGFuKkZZIhLw0NnWjms0hGRyUFJeSoLl
      QWOjdKaL3gR6EISLlpYolUsLUSQJadw/gOBQA4eOVuGJAKMdHDlWg08ABGk8eYn+sbTLztrj
      fPCHT7kxEECSVGrOnqJ1yAeAt/sGNwdHkY1Goq5GDn59Ga+qe45Hhe4BHgTvAMNqOklJU182
      S0o5e77zNAkSgIeR3x1kMLAWu21SQSWe1bvWsnFxBqASHzhEt9NLWVocySVr2VNyq+By1C/e
      pXtoFYvT9Z/qUaBf1QdBkpDQYiHNU43qSfK45BoZxSCmzt+R5LHMsRiKInMrqSbo6efqxXM0
      tA8RFQJvIMzTqyPoP9WjQb+qD4IjgyTDeYZcYVJTTI/gBH7OfXkAVj3D27uyMMoSFw/qQW+P
      Er0P8EAkUloax5WqGnxhFSEE0VCQQPj+07hMDx+BQCJFhRkY0Ah4hxkenV/zgM43dA/wQEiU
      rNmJ+/QJvvqiE6vJiBZRSV+2no3ZM1F/MoXlcPrzz3HYTRhQcPpUsmaiap0p0aNBHxiBFg0z
      POwmHNVQTFbi4x1YFI0Rbxh7gn0svVLD5xnF6IjHJGv43T4M8XGYJAgGfAjFgtVsAARhv4+I
      YsZuNqJGAriHPUSEgs2RgEELIJsdWIx3nLWeDzBz6B7ggZGQDWZS0jImbVeITzCO+yxjT4i/
      /bct0XF7j8U2fpIfCZMtjls9CsVoJSV9fP7vo+hr6NxCF8B8JBwi8uX+2bZi2miaGHtfMtuW
      3I3eBJqH6AkxM8fcs0hH5zGiC0BnQaP3AeYhg0NDbH79O7NtxhOBLoDZQAhUTSAr8reaKMFg
      tVL50/mzRNJcRm8CPQShoXZu9I0++IHBXv74/mFGAKFGaL/RiMuvv/GdDXQBPAT+jipONAw9
      XCWShMVmw6jMwTHCBYDeBJopIl5utrpJSZFoaWrFGzVRumwFOYljU0lrYdrqq+kY9KIoEYZ8
      sSe+JAShaBTrWLZk2OfiZmMTA54gsiWBypXLSLbqP9OjQvcAM0VkmLOHv+Tg6XoMCelk2n2c
      PHoZrwZCDVJ/ej+Xu6Kk5+SR6rCCGFuTTIvQ2HCdYV8soM7X345TtZKdl0OKPMihg+dwR/RX
      NY8K/dEyg1iSStjz8q2EmEx6Gg4yFAB5tIOrTguvvrwem0GGgI2ausCUdSQVrWL7rZmqS0rw
      fPkOvcMbSEw3Tlle5+HQBTCTTE6IUQQCGB1xk5ycjVm5n8MVeAfbuVxVRWuP505CzKoooAvg
      UaAL4HEgSWhiOlOijFJ18CTmDc/yw2fTMOgJMY8cvQ/wGHAkJDEy2IpzNIwQGqMeF77QVEk0
      QYIhO1lZScgiyoizlwHPNBcj1vlW6B7gMWBLzmVdUTsHPv0Qk9lEQpwJ75SLeidRutTMqU8+
      5KLVQpwjidGo3gF+lOjRoA+BFgkREgasJgWESjCkYrKYxtyqRjgYRjFbUCQQmkog4EfVwGg2
      g0asrBCEw2EUowlFltDUCMFAEBUZk9mCLCJIihnDuPcEekLMzKF7gIdANpq5nboiKVgmTGAl
      Y7LcWU5SkhVsdgd3IUmYxoU2y4oRW9z4Dq8+KdajRBfAPEQKh7F+fXy2zZg2mqYiSfKcnCFa
      bwLNQ/SEmJlj7lmko/MY0ZtA8xAhBB6PZ7bNmDZz2QPoApiHOIeH2fw9fYGMmeDJE4BQCQQi
      mG2WWW7fqQR9EYx2y4yP4xgsFirfnj9LJM1lZuweiYb8NDTU4w+Pf+Ufovl6NcNTvvQZf3CA
      G1dr6A/EQoT9w93UN/dMPbHs/QgN8tWnxxiZtDns7qahyzVui0pr7WV6PSFCngEu1jR9i5N9
      EwN8/YdjPGS2gM4jZsYEoIZGuXbtCr4JAghSX3WOIf/9rDCSmpOFwxh7VvqG2rhS185MLigU
      HmrlWutg7INQcTWd5XTTKGazAcUSR35W2gyeTWe+8PiaQIFhLrd5KE6McK32Jl7VzrJ1a8lP
      toFQGR4aJtmRgOJq4cS5atr64EvhRFZS2fbiJuKFhrO9lqv1HQh7JmvXLifZNvbCSAtx81oV
      N7pdKEbo86jfaErQ3cHhc51sfuk1ki0K0VE//cMBMlKT0KIRWm/WERefSGNtLaOalcWr1lOY
      bkcCtEiA9oZr1Lc5kWwJLMrPJi+vGIcF1Iifm9WXaO7zYLSDM3jHhUV9g1RdvIxzVCW7bBWV
      xZmYFImQp4vmXhVDuJebHU4S85aysthB3ZUr9I1olKzeTHmWYy4usv5E8PiaycFhLp7ax/Gr
      fWSVLmdptsSJ41cIAmghWhpv4glFMSRkU1leQEZOIevWr2fd2sXYEHjazvHVmQ7yF6+gKN7L
      wQNn8EQFIuqn+vhX1LltVK5ex5KibMzfIGsR9VN9vorUldtYlBQbS4+OOrne3AmApkaoPvYp
      By60kFW2kopFDqrOnsUb1EBEqD3xFRe7NZavWcPy0mwaLp3GHQIR9XHtyJc0+eNZtmoNFQUZ
      GMbWAAh7utn32SFEejlr11QyXHeCY9faEEDY08ZXnx/GKaWwavVyRqq/4Ncfn8KUUcbq5bnU
      HjlEr+/R/jQLmcfaCVZSK3jp+W0x1WkG6s5XMQwTZj9WzHaSk+KxxsmkZ2SgSIAYpfbcDSp2
      fp+yLDMS6bi73qeu08eKuH4aPTaee2EFDpMMQUiyD055/r7aU3zUHsEbt4bvL83lXmm4tqwS
      Nu3eQWachAhYuXbzDMFwhPhQC1f743nxjU0kmySE0EgwHwMg0NdEQzCb1/aswDpWb6Ip1gMY
      7LqJml7J+sWLUGRI3h7m/S/q8K4uRJKMFK/YzNplpZiAUEUhkmkdy8oykID0uLP4Q4D9Ya++
      zlQ83lEgSbrjcmR5+qMjQQ/dbpm8kXZujK1DGkRi2OVhVAwT78ieMHvyvUgtXsXOUjh4pov+
      kSAFiZYp56uMvbKXbpmMJMXq9vV1YyooJ8k0+SAN16CbtPyC2zf/eEY9HhwZ5bdXhTElJZMR
      GqE/AJm3znn73LGQAb3J83iYsSaQJMnIisLEyIoIqmrD+LDJTAYDJi3MYH8ffX2xf1piMUuy
      HUiKgioiTL0+6aRqLHZSC1axdamV40fPE4w+WDfbYDQSCk0Vny+hKBCJTN33MBiMaOHIHRMj
      EYIYMOtJXrPOjAnAaLGRbYSa1k5CUQ0tEqCj6iye1ApS4+5//HhMZjta2BurJxpFNSSzeLED
      s6OY9Zu3snXLRpaU5hNvM+GIT8E/1Ez3sB8hNNzOfty+bxp3lchbuoW18f3sP3+D4Df3lyfa
      lV2Cre0qjU4fQoviHehkbHFHUrIyGW5toGckhKZFGe7twxOOxvZlZ+FsqmZoNIzQonTU1eHO
      ziXnyXsLM++YsZ9AMlpZvXUjJ06c5ncXjyKQMDrS2bGnEvsD+nNHWiGltgbe+a+/xmrL5+W3
      91C8bhvtB7/m95dDCEkhISOf9Zs2kZaYyabKbA5/+nuikoH0zFRC91lWVDLYWLJ5J22ffsnl
      zFRWTVOgkiWb9WvSOPnFe5wRJpKzcond4hKmlCI2lfZy8IN30YwWMnMTiIw5mISMctaVuNj/
      ye8IRzQsiXls3b5OD3SeA8xsNKiIJYHH/r8zH7wkSbf33QmJHVtBUZKQbh03qawQIrZ/bBt3
      1R37/9ZXEELcqX9SO/pWmbvOPw5JksY14cbOMcm2O+cCxCj7P9jLipd/SE4cE/ZJdxr1SExt
      44TzTSp3q4wYW5JyfF9FT4iZOWbWCd+66abqxN21TbrrJplcdkL8+D1ubMaV+6Z487v3Tb1g
      w13lJpxvmOrzPWQtLiDepNFVc4SRxBUk2ybbce96J9f/oJ9voYb0qRRnAr0V+kA4SI4b5cyh
      vXhDkJizhO88uwzLYw46UqJR8qprH+9JHwJVVZFlPSFGZ4bQE2JmjrlnkY7OY0T3APMQv99P
      b2/vbJsxbcLhMEajcU42gfQ+wDxkeGSEZ//FfzvbZjwR6AKYQYLeITRLCrYZe8Or4h32YklI
      ZHykh2I2U/bqyzN1kgXNAhVAmI5rVVxu7ruTcyBJlG98jqVZ1m868BtpOftHRpf+nPU5M2Ik
      MMrZfYepfO0Nsr+9WTrfwAIVQITuhn5yNm2kyH5rNEXC6pg/Iys6M8MCFQCAAUdSEimOiY9W
      oUZoaqjBkZhEw5UrOIMKi9duZemilNgUh9Eg7fWXqarrQJjiyS8ppKywhKQJs7kJwt4BLp2/
      SIfTiyk+izUbN5CXZAUETdVniEvJpe7yBVxhE5Ubd1KRG49MLLOu8cpZrre7MMRZ8PtnMi9O
      ZzL6MOgkhBal9cpR9p9upmjdTp7espSGqtNjSxqp1J/5gnPtEk899yJ7dqxhoOESTv/kiDoN
      j3OYpOJVPP/iK2wotnDk0An8auxmvnFuPwcutLJ40x6e2bqU+nNHGfRGQfVTdfALWkUuzzz/
      ArvWL8FsmHsjJ08SC9gDODn83u85N5aHjCSx8cU/oSwBjMn57N64jUXJZogYSDE14gtHIdhP
      fZuR7W9uIM0qI4SdxLipniEKaYWLuZVlHF9SQX7VcQZVlUWKAWvaInbvfoq8BAkRNhBvryMY
      ChPxNdIUzee7GyqwxbKGSLgr90BnJlnAAkhh5xu7KHfcmcBWVoAoY/E/d2KPZElGIMDVgzuj
      lEzrfRyniDLYXsf5i7UMjPjQRJTBNo3cW3FvcLt+SZKQxhJlXH09pBSuHrv5dR4HC1gAEopB
      wWCYeAm+scVttmDy+wkLgeXWS50pXiOqQS+XrjVStOFZns9NQpZGOf3bI/dtb5pMZgKe4MRo
      Up1Hiv6seRBSCsgcreVqyzCapuIdaKfbNUWGmBCoQsJsNSOJCH2tN2gdcN83aS0xt4jQjSvc
      dPrQ1DBDnW04g3on+FGyQD2AhMHk4fDv3uWUYewZIEmsePoHrMmWMRpNyNKdskaTEUWSgATW
      bF/J8TOf8+vjgqScYozGO2ktitGMIoNicbCyLIujX7zHMUzklxXhiI+7nYRvMJnH1c/Y+SSk
      +Hy2r+3n5Jd/4ISwkFOci9Vi0r3BI0SPBXoIhAhx+JP3Kd75A4qSH1+Cr54QM3MsUA/wbQlQ
      c+4a1pxFJFllXC1XcFor2BT/eLPbhdAIuFz3L6hzX3QBPBAWsjLjqKmtojqgEpeyiJf2rCLu
      MV9FoybY4Jk/s2XpCTE6M4qeEDNzzD2LdHQeI3oTaB4yNDzMyz98e7bNmDZ3z8gxd9AFMA+R
      zWYy3nx9ts14ItAFMF3UMP29XQyPxqYjkSQFa0IKORnJ95xk99swPNCJZssgJc4EIw18ciLE
      Cy+twHL/Q3W+BboApkvQw/GTp0jKWITVpCCiQXovnCJn02tsLkmcsclsQ74RoobU2AcRJRiM
      TGfaU51viS6AByEugw2bNhNvNSKEQO2/wD/ur2F5yTZMXifDEQtpNo32jh5MyblkJZkY7uui
      b8iLikJ6bhEZSTbkiI+WtjZG/JHbVcdnFlGUGY/dkUhEnzX3saGPAn0rYs/ksG8UyRGHAfB2
      1XKhroWrx7/k2MUmvGGVoHeAutobjARChEadHD98gM7hMCBQo1EikQjhoI8rxw9R2xNb9rSr
      7hQN/VPNQK3zKNA9wIPgG+Ry1UWsJolRZz89HiOvvLECK+AD+hsvYl36FG8/U4xZjsUObd+T
      e/vw5KrDtHX0sWhlPqVLVgAa/Q0nuJG/iR2VM5ZIrPMA6AJ4EGQDVqsVq0nBkJpONNpHd5+P
      1DwHAPbMCratL8E85le1SIDO+sucudqEL6zic/so3F4Y2ykEYXc7p6+52fzs88SZdGc8G+gC
      eBCsSVQsrSTeGmuji3AH7/1mP9k/fBMFcKSkTpgntLP6MKd7M3jpez8i3myg49oJbo61bjQt
      wPkTZ8lcsZvCxPnzVvdJQ3/sfEuE0AgH/URR7jkC5Pf5yS0txWFSiIaDjIyMEgWEUOmvPU2n
      sYzlxfryrLOJ7gEehJEejh/9GotRQagRXIMD5G95nhQrDE9RPCO3iGvnD3OgPQEFlYEeJ8lL
      ygk5m/li30Vsles4e+xrAJILV7KmRBfD40YPhpsuagTX0CDewNjQpSRjtsWTlpKAIkE04GVU
      NZIYd+eVlVAjeFxORgJRzPYE4i0SEUzYDFEGB52Ex00mYUlIIyPRRsDrQjUlEGdWQA3gGtFI
      TLJPcNV6PsDMoQtgHqILYObQm0DzEBEKMbr3i9k2Y9poWmxZqDkYC6d7gPmIng8wc8w9i3R0
      HiO6AHQWNHofYB7idLnY8eZ3Z9uMaTNuJdjHRkVaBp/98Y/3LacLYB6iWCyU/mj+ZITNBuF9
      B6dVThfAJEZ6mmjqGblruz2jiIq85Aeqy9NTz5laD7t2bcSsLws/awih0X/jMidPnuLTcw38
      6//p71mVG5sWX+8DTEKSY/OFylqYC+fP4A5oGAwGFPnb+G8xYaV5nVnCU80fPr6InL2S5UUJ
      E34P3QNMwpFZzMpMUAMeWtraKF9SSV7K2FLwvgEa3SbKcxIBEKEhbrSHKSjLQnP3MhC2ke3Q
      aGpsxZJRQtKkul3dzXiNqSxKT0CoQVrrrtPnjZCcU0JxXipG4ae1qY/UkmIcYzkxvuEe+kdN
      FOamzMmk8vmAlLiSv/ofVqKFffyq8dC4PZruAR4Idwsn6+4sTyr8HZw82UgAGO1t4krDTS4e
      2cfVVhdMWNhCI+Rq4uvjNYQkA0ILUHt8H5e6gjjibbRePMql1iGEJNNdf5K6bu/tp1Tn9Qs0
      9N7dJNOZCcK6AGaSvsYrhLI288aruylKc9y+uEF3J0eOXqNy93OUpdkI9t7k4qCdl57dyrLK
      FezaWk7T5ToCspXS8gLa6hsJawII0NXrpbgwR3/6PxJUvQk0kyQuWsHmlQXcyW1R6bx2nJvN
      SZSseYby9NjbW497CIvNxujQIKMAkhHr0BBuFVJzS5CuX8QTWE5KoIkBpZSNyfPnre/8wqgL
      YCaxxScwMbFLIW/FU6xZbGP/kasMLFtEplVGliXc3fWcPu28XdJelI4pCqb4dCqTBbU9wxR0
      N5OxfBdx+gjSI8KkC+CBkBUIh4loAikawO0cRp1GKzI+awlPrxzk6NEqnt+9loTULJIyQmzf
      s4NEqxEtEsQ7EiK2YquRslVl1By+wIDRys4NcY/8az3pREb6qG8bQIsE6O4ZIKG+BoMrkdyS
      Al0AD0RyAdmer/j4kxZsZiOG6CBRCu9/nGwke+UOyvrf58BJG2/uLmdLQRf79+7FbI5llNkS
      i9i6ayUmJAyp5SwSR7lkXE+SSX/8PyyhwSa+/PI0AJakIlqqvqaFdF74SYYeDXovhKbhD/gx
      W2wYlFtPeUHI78UXiCAZzNitBkIhsDssiEiQkKZgGzenjxYNE4oILBYzkgTRkB9/RMIRZwUt
      is/rJRTVkBUjNrsd8+3VZgTXDr2HK3s3O5ak3xVCoOcD3B9t30H2f7r3vuV0D3APJFnGbp/c
      /JAw2+Ix2+5sMZnG/jBasE0qLRtMWMddYYPZRrz59k7iEpK4u4EjiAy30jRkY8vm1DkZQ/8k
      oQtgjuFsOMne8z2sf/oFMu+1Xmo4jHzg8OM17CGYjYSYyvLF0yqnN4HmIXpCzMwx9yzS0XmM
      6E2geUo4HJ5tE6ZNJBKbSeNh3mYbDIZH4kF0AcxDBl1DbHj9tdk247ER8ozwi3/5r/j5z38+
      43XrApiHGCxWVvzkx7NtxmPD2dB41zYhBJGQn7AwEmc13d6uqRGCgQChiAqShNlqx2oyTtkB
      F0IsFAEIIn4PzU2N9LsDyGY7uYWl5GckjK0ArzN/EET9w1w9fZh9X+ylMectfvtvXr29t3r/
      r/j4dCveER+qLGNMKOL7P/8J6xdNDk4Hb9flhSGAwHAnh/afwl6wmLycFNSgm/pT5zG8uJO8
      cU8PnXmAgMYLh7nutLN793ZcvRN/v+zKnfzzjT8iI9mOFA1w/L2/54t9F1j/589OrCY6yGf/
      +P4CEIDmo/roUazLX2DHkrTb63lVVAq0sSJCDdLZdJ2GDhf29CLWrSjBJINvoBd/GZ4AABHU
      SURBVJU+LYV8e4Ar126SWFRJri1InzuE5BugtceFPauUpYVJtNZco8+rkVexktKcJBRJ4O5t
      pq6xDW9Y4MgoYk1lEWYFRge7GQybMHg7udE5hCE5nzXLSrErPhqqO8lcupTEsd/V62yny2Nm
      cVGGHhINIEks3fEWSwFP9R/5dGDiNUlfNG7832jDalKQQ3eHk3jrT3DWvP7JHwbV3J3U+tJY
      uzht4mJ2koQsSYDgxoWDnLrho2xxKRb3dQ6caSSkCUb7mrje1MTxg4foDRpx2E34hzs4+Me9
      dIXjKC4vY7h6H++8f5BQfA7F+alcO38CpzcMBOntGMSRXURFWRFS9zm+vtaPBoz03eTg3o9p
      GDZQUFqKof86F5oGQDLj7qzieof7dkJMx/VLdHjmz4jPrKNFcfW0cf3SGT78f/+WjxqSeeuV
      zZMKqXQ112HQBp58DxDwegnaHSQpQCRA/dVzY0nviWx8bjMZJi+19SNs+u7zFCQYyc1MpGfv
      AQZHCjECXQ11rN3+DDvKMzFIEkMuA/krt7BpxWIMkiBSVIbNVsbaJfkQ9nGztZ1QOArYqNiw
      6bYd+ZkaH354E9/qDEBh0ZpdPLOhHIA0tYevutwgZ1FUVsjRpibCheswK356+n0UVmbqT//p
      ogW5WXWCA5dvEBU28nJt3P38FwT8fkZccU++ABRZRtI0VEBRTOSVrSAlx8XJvWcZCq8nI9yL
      M2DD5+qi1QVoEUJCwxsIkQxkL9nAmvKsCRmOkjQ2x40U+zDlzamFaK+/yuXqJly+EAI/ochi
      orEaxrxPjPHj20k5pRiunsXlX0Gqr54ByxK2JOv9lGljiGP9Kz9m3csq4YCPmiO/5z+/+xn/
      8K++P66QQmpGJvEFJU++ACzJqSR6mukOQL5VIS4hmTirjP1W1KbRiDYySFtz8+21eBMzS0m2
      G2EQzDbbxPTeaRIeqON43QjPvPAmmfFmJKmLvb9quu9xxrgUKtOhrmeYgu4OcpY9zb1CgnQm
      oamoyCiyhCQpmG3xlJSU0H+2ZlJBiezK9Wh/2PfkCwBbLusqrnDy8Fn27FhFapwFLRomHInG
      2tnmPEqL7SSVrmFFfiIiGmLA6SbebOBhUtHVgB/ZkUZSnBk17KO/uwOvpt3/QMlIyepKrn1+
      ml5rHM9vmRxjurARQtBZd46b/QF8LTV0NJg5csSE2ZbDqqUSv/q7D7EvXs6iNDuSFuTKsRPs
      2BabRKxl7//CX5+q4P/6398gKX0df/qdhTAMKikUrNmJ59RxDu79AFWTUAwKxvQ80k1GkAys
      WFvJsbNfcP24QJKNxOeVsn1dykOd1pq1mNyag/zht9VYbfGkZZuQmM76vxJKYhEF5kNUmdcR
      b9QTYibjHuiguXkEyGJ3OTQ3N2NPNFO5cTM//tM3uFhVQ2dLP5ji2Pr2X7CqLLYCZ8qyZ/lx
      chJWAMlA5XP/dIFEgwqBEBrRaBRNAJKEohjGXKUUW/Q6GkGN7UQxGlAkGbQoKvK4hBgQmooq
      QJEVJEmgqRpCklBkGYQgqqrIioIsgaZGiUQ1JElGMSgIVaAYZYSmoQnpdr2xOqVx59G4cuh9
      fPl72FKWsuATYpwNjfyzpcv1UIhvjRRrExrvkV4oSRIG4xQJ0orhrm2SrIzbJiEr4+qUJAyG
      O3tlxThxSkT5Th3jm/Xj6xRCEHHdoNHpYMfWpHvG0C+E59ZtHuF3XRgCmEcMNZ7ks4uDbHv+
      BTKtU/d+5UiEpBNnHrNl3x5N0x4qkjMJKC4unjmDxrEwmkBPGHpCzMwx9yzS0XmM6B5gHhII
      BHC73bNtxrT5Jg9gtVpJTEycBati6H2AeciQx8O2H/1wts14eIRgW04u77zzzqyZoAtgHFo0
      hC8scNgs9y88ixjMZirefH22zXhoNFWFc1WTtgpCPg9Do1HSU1MwjI9gFIJo0MuAO0BKWgbm
      +929Wojutm6UpEwykya+UBRqkL6u/iezDzDcepmG/uADHxfqb+SL09cfgUX3RouGqL96iX7v
      g9v7pKFFA9Qe/4S/+8W/5y//wy/p80bH76T+1Kf88h/+nn/77/4NTa771SZw1XzMP//Zn/GL
      35yefCYGrn3JX//Ff/OkCuDStxLAbCDJRnILikmwTuct8ZPNaPdlzreaef61N6jMc0zc2XWe
      g+1mnn7jZ6zJVe9bV2joBv/4URvf/fEeJi9sFfH288HBBna/tnMBNIF8/ZxvD1Bi93Gp5gY+
      KZEN2zeR7YgNI2pBFxdOn6PHHcQkhRgxFsWOExregVaqLtUyHFYoXb2ZpflJyIC79RL95iJE
      bzX1bUPE5Vayc0PZ2MVU6Wu6woXadkxJi1i3fiXJNgMS0H+jiqq6DsJYyFm8knXl2UgiSm9/
      D2nGEiwGhdBIP9VXrtDp9KPYUti4bTMZcQtDHPGLtvCzn0B4qJX9hknP5vwt/OUPY2/Nz00j
      OuTS0b0oy3awzHyZ9glBXSpNJ3+PP3MXexY1PpkeYAL+Ic4dP8C5m6NUrN3C+gI4erSGEBAZ
      7eXg3v1o2ZU8tXMHSwpSMY69evUNNvHZ/ktkLF3H9g0VdF3cz/kGJ5qAka5a9u0/isuYy7Yd
      m0kYOMfpZj8Ila4rx/i61sOqLU9Rlujj4OEz+MIawnWdfecHWbLhKbauX4JwOQkAaFHa25oZ
      CcTcfcA1iJy5mO07n2JdkYkjXx3BGdIH6qaPwNd1jK+rEnj1xfUTk6CEwNt6mg/O2vjB99Zj
      VRZIJ9ieu4Lnd2+IqT29lPiz1xkBIp3NhNKWsmFxHookYQtkYB0KA4K++kukrHqOxYtSkIFN
      60c5eKWalcU7Aajc9gKbS2OdZWtpJp/2u9DyEqltHWT1phfJS3cgklbS2nSITm+Q8oCHUFw6
      WWnJWJQU0rKmtjWxoJI1tz4kb6Sg+bcMuCOkZug5AdNBCwzx0e++Ztnbf0Gh3cC18fvUMPs/
      38/iZ39GvlWhgwUiACT5jquT7/w94naTkl0+ITklRoDBAZWcyuTbZW2OZCKRNqJqrP05PglG
      VmKBcGokgtfrxNnZQo1TBlRCgSEGPCoVBWtYZfoj775bS25OEfklZVQUpk9ywYKh9uucv3Sd
      /mEfqgBvIMzTK+/f5tWJ0X7pc/ZVD/PdxVV81SnReqmOpl4Px8+nUWi5wfv7h3glr5Gvvmpi
      8Hr1AhHAPVAUBTUcmWKPEbMlSjCkwVhCnapGY9ll35CaKMkyBkXC7xvFqMWOSy5fQU6SGWQT
      655/i2U+N91tN7l68musqT+gaMKI6whXT1wnc+dzPJudiCJLXDy4cKI+ZwJHRgUvPmcgOOIi
      CLi9owT8Iwx7RilMKOTVH2yFURdDozA8MrqwBZCcmkbVpRrcZekkGFX6urvxhZIBA4vKivn8
      7GmKX9hIoiHKzbpq4lLKMRvv3W1STBZyM3IZTc5idWUhBi3EYE83skki5O6hN2glOy2JwtIK
      Bppq8QSBCQKIEo0aiHPYQAsz0NVB+6Cf8kd8HeYKruaLHL7USnR0kJqr1/ji049ItqWz/ZXt
      WPuucuhiK5qmUXW9nZHPPqA+PZVN2zYS1/Ipb//ban554BeUlG7kR6Ubb9d5LcGD2lLOd/Zs
      BeBHi9fe3tdx4gldJE+SDXcmvJIkFGXiU1sei7tPzF3Myv4TfPLuf0UyWsnJiENRZEAioWgN
      K/qO8dV77xJSJZIKlvLUpmIMshQLZ54ww4QSyy1QTFSuXc3JY6f47cUjCNlEUmYBm5/KR0al
      6cJBjg2Ooikm0gpW83QKoIIsx1aJgUQqVqdw9KN3OWWwkpVfjNlqZqGkw0uygtFoxJiUzRuv
      3pr6MTaCxtg+TcDz3/+XY7sUZEnCXrSN//HfLSdzijoL1r3AW0umXmYqdclOPRZoPvKkJMRo
      qkr6uSo9FELnARGCsHd0tq14aDRt9jv3ugDmIQZNY0lH92ybMW1UVUW+xwDCumeemQWL7qA3
      geYhekLMzDH3LNLReYzoTaB5SDQapanp/pNszRXC4fA9V3hZtmzZLFh0B70JNA/p7u9n15/9
      6Wyb8dAMXLnGcHv7rNqge4B5iGIyUfz8s/cvOMfx9/ZN2iJQQz66OjuxZpSS7ph4e6ohH93t
      zVhylpNuv0/lIsJA2w16AzbKyguwKoAQhLxObja3Mho1k1tcqgvgXvi7rvHZqfrYB9lAWl45
      69YsJd40s90mLRKk5tIlUitWk5NgndG65xcazhsX+c0fPqe5tYZ1f/6P/HTDWCS/0BjpvMp/
      +c3HNF7+inV/c4V/uuKbawsM3uBX/+V/5srFRfz7j/4j5Q6IRgb5zf/xv9JtzSVJ9tH+oVUX
      wL0Ievogey0vrspAaBFaLp/gk31u3nphC7ZvCId4UCSDmcUrV6OY5s+oziPB38WJ893s+el/
      h/Pw/0bb+H2j/Rw+38KuP/lL1iffoOF+dYkQp7/YS/rW1ymuvhUPqtF56P/jSuJL/OJf7CJe
      Vrmy9x90AdwbCaPFhsMRy0xatn4TN/aexhOOYjNGuX6ujtzVa0k0gRYNc/XSWfKXbiE1TqH/
      xgWOX2giJFkoqFzHxqWLMCoSPXWnOHWllbBkJX/ZerYuy0fWwty82UjGoiWkOkwE3T1cPHeO
      1oFRFFs6O57dRY5jAYRC2/J5/Yf5AJybPB+qI4vX33wDgCum+9+y3qbDHOpN56++X8Ev/+9b
      AvBx9Uwj297+1yQYFUChYPUCWCFm5pDG4oQAInS3tBMYe5EpNJWOliZ8YY1Qz1X2XR5h53fe
      5I2Xd2ITAVRVQ3Ne4cvLAZ565U2++9J2EkKjBAE0lZ7uTnyhWEJMaMRD8pJtvPW97/HShkyO
      fbaf/qA+TjFdwt4OfvvOJV798ZtkTMiD99LXYic99Y6nNVkydQ9wb2IT6qqqihYN0HDxHH5H
      Jkn3mYpAjYSRbHHYzUbMcgqrl6cgSRJaKIhmSyDObMRsTGP5mrQpg9zi8xZTIQRCCIzZlRQm
      1TDkDpORucCbSNNBCG6cO8hgwXpWZTnuur6TxzslSR8FujfRENdP7MV1OUJr5wjbXv0nvLm9
      BPN9fKYtfwXr2g/z3rvvkJicTW75ElaV5mLMWcumhL289/t6UlKyyClZwuqK3EnL9wgGblZx
      9moT7tEwmhCM+IPsXjmNdQV0YOQ6/+mXH5D89Nt8+Pt3gS6ud9aw9713ee27r5FbFmJwKAzp
      sSZlKNCvC+CeGCwse+o1Xl1h5/LRA3SN+oiqGiZJvueMzQACMxXbXqB4jRfnQBdVp8+TkJFK
      WaKFZbtepzzgZaC3g6tnj9Gc/UPKJrhpN9VnWil+7hWWpMehSHDh4B8e9Ted1wihEfT5kS02
      zIZ0vv9X/z3+0K3pVHxYTTaSUlKxGOys2FTCfzxwihdLd+CQVDqqq3QB3A+DOYH1z76C4eBn
      fLpvlJef20i8yQj4GA2EUZUIHY3X6fHCKiDg6qFnVCYvN4OMrCwSrHWEI4LQUAftfjsF2clk
      ZefSaqkiEJ18NoEmNAxGI0SDdLfdpLnfR2Xl4//ej5uQs4XP9h9hcCRM68XL9Ff/msClFJZs
      eYZ1+XBk/2d0DkPn6Rt0tf1nQmcNlG54gW0lJv7m7Z+z+G/+Ez9dnc9Tu8YH19Vw8v/pYvsz
      z5PnAHX3n7Hq/N/w9//nVVKUUVqcDl0A90I2mrHeWk9AsrB8x7Nw/DBHzjby3LYKSsrTOfXJ
      O5y2xJNXUEBqoh1FBoPBiPPyGU4dGUKTLeSUraY42YIhaKHv4nHOHXajKVZyyjexIQlQJcxm
      K4osAYks35jP0c9+x1nZRn5JBempSRjlJz8lRrHEU1K+hMygOi48wkhmahwGMxSWLiMxAMuW
      /V1slySTlhaH0Wbjz//2b7EtSp+i1iL+2X/4U9LHvKxiTOZHf/XXNN1owRs182ppuR4KMR95
      UhJian79GzrPX5hVG3QPMA8RmsboXWEE849ocPZn79MFMA8xAU/L82e2uHslxOx5861ZsugO
      ehNoHhIKhSasRTbXiUQiGAyGObna/fy5ijoT0Kaz5vAcQtM0XQA6M4fROH+aQEKIeybEzDZz
      zyIdnceILoB5yFx8kn4T95oRYi6gd4J1FjT/P/zQFksvxEEXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total people vaccinated VS People Fully Vaccinated' width='192'>
      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
      nV3N/w/AuQCWzwaZmgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vaccine Analysis for per hundred population' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vaccine distribution for 2020 and 2021' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
